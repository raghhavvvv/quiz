{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/AdvancedQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\nfunction AdvancedQuiz({\n  questionId,\n  onBack\n}) {\n  _s();\n  var _question$options, _question$options$fin;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`).then(res => res.json()).then(data => {\n      console.log('Quiz data received:', data);\n      setQuestion(data);\n      setLoading(false);\n    }).catch(err => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n  const handleMultipleChoice = optionId => {\n    if (selectedAnswers[questionId]) return;\n    setSelectedAnswers({\n      [questionId]: optionId\n    });\n    checkAnswer({\n      userAnswerId: optionId\n    });\n  };\n  const handleCheckboxes = optionId => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: newSelection\n    });\n  };\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({\n        userSelectedIds: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: current.filter(id => id !== itemId)\n      });\n    } else {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: [...current, itemId]\n      });\n    }\n  };\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({\n        userOrder: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleRange = value => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: value\n    });\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({\n        userValue: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleLocation = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        x,\n        y\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleMapClick = (lat, lng) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        lat,\n        lng\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        lat,\n        lng\n      }\n    });\n  };\n  const initializeMap = mapConfig => {\n    // This will be implemented with Leaflet\n    // For now, we'll create a simple clickable div that simulates map coordinates\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && mapConfig) {\n      // Create a simple coordinate system for demonstration\n      mapElement.innerHTML = `\n        <div class=\"map-placeholder\" style=\"\n          width: 100%; \n          height: 100%; \n          background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n          background-size: 40px 40px;\n          position: relative;\n          cursor: crosshair;\n          border-radius: 8px;\n          border: 2px solid #333;\n        \">\n          <div style=\"\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: #333;\n            font-weight: bold;\n          \">\n            <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n            <div>Click anywhere on this map</div>\n            <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n              Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n            </div>\n          </div>\n          ${mapConfig.landmarks.map(landmark => `\n            <div style=\"\n              position: absolute;\n              left: ${(landmark.lng - (mapConfig.center.lng - 0.1)) / 0.2 * 100}%;\n              top: ${(landmark.lat - (mapConfig.center.lat - 0.1)) / 0.2 * 100}%;\n              transform: translate(-50%, -50%);\n              background: white;\n              border: 2px solid #333;\n              border-radius: 50%;\n              width: 30px;\n              height: 30px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              font-size: 1.2rem;\n              cursor: pointer;\n              box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            \" title=\"${landmark.name}\">\n              ${landmark.icon}\n            </div>\n          `).join('')}\n        </div>\n      `;\n\n      // Add click handler\n      mapElement.querySelector('.map-placeholder').addEventListener('click', e => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n\n        // Convert to approximate lat/lng coordinates\n        const lng = mapConfig.center.lng - 0.1 + x / rect.width * 0.2;\n        const lat = mapConfig.center.lat - 0.1 + y / rect.height * 0.2;\n        handleMapClick(lat, lng);\n      });\n    }\n  };\n  const checkAnswer = answerData => {\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log('Answer check result:', data);\n      setResult(data);\n      if (data.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n      }\n    }).catch(err => console.error('Failed to check answer:', err));\n  };\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  const renderQuestionContent = () => {\n    var _selectedAnswers$ques;\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-area\",\n          children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMultipleChoice(option.optionId),\n            className: `option-button ${getButtonClassName(option.optionId)}`,\n            disabled: !!selectedAnswers[questionId],\n            children: option.text\n          }, option.optionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this);\n      case 'checkboxes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkboxes-area\",\n          children: [question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (selectedAnswers[questionId] || []).includes(option.optionId),\n              onChange: () => handleCheckboxes(option.optionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, option.optionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckboxesSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length === 0,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this);\n      case 'reorder':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click items in the order you want them:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-order\",\n              children: (_selectedAnswers$ques = selectedAnswers[questionId]) === null || _selectedAnswers$ques === void 0 ? void 0 : _selectedAnswers$ques.map((itemId, index) => {\n                const item = question.items.find(i => i.itemId === itemId);\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"order-item\",\n                  children: [index + 1, \". \", item.text]\n                }, itemId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-items\",\n            children: question.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReorder(item.itemId),\n              className: `reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`,\n              children: item.text\n            }, item.itemId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReorderSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length,\n            children: \"Submit Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.minValue,\n              max: question.maxValue,\n              value: selectedAnswers[questionId] || question.minValue,\n              onChange: e => handleRange(parseInt(e.target.value)),\n              className: \"range-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"range-value\",\n              children: [\"Selected: \", selectedAnswers[questionId] || question.minValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRangeSubmit,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this);\n      case 'location':\n      case 'pinpoint':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionType === 'location' ? question.mapInstructions : question.pinpointInstructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: question.imageId,\n              alt: \"Quiz context\",\n              className: \"quiz-image clickable\",\n              onClick: handleLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), selectedAnswers[questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-marker\",\n              style: {\n                left: `${selectedAnswers[questionId].x * 100}%`,\n                top: `${selectedAnswers[questionId].y * 100}%`\n              },\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-feedback\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the image above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this);\n      case 'real-world-map':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"real-world-map-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click on the map to mark your answer. Use the map controls to zoom and pan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `map-${questionId}`,\n              className: \"real-map\",\n              style: {\n                height: '400px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-landmarks\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Landmarks on this map:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"landmarks-list\",\n              children: question.mapConfig.landmarks.map((landmark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"landmark-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-icon\",\n                  children: landmark.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-name\",\n                  children: landmark.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-feedback\",\n            children: selectedAnswers[questionId] ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You clicked at: \", selectedAnswers[questionId].lat.toFixed(4), \", \", selectedAnswers[questionId].lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the map above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      case 'type-answer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-answer-area\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTypeAnswer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answer\",\n              placeholder: \"Type your answer here...\",\n              className: \"answer-input\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getButtonClassName = optionId => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    return 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [question.imageId && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.imageId,\n        alt: \"Quiz context\",\n        className: \"quiz-image\",\n        onError: e => {\n          console.error('Failed to load image:', question.imageId);\n          e.target.style.display = 'none';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), renderQuestionContent(), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${result.result}`,\n      children: [result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!', result.result === 'incorrect' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-details\",\n        children: [result.correctOptionId && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : (_question$options$fin = _question$options.find(opt => opt.optionId === result.correctOptionId)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 42\n        }, this), result.correctOptionIds && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answers: \", result.correctOptionIds.map(id => {\n            var _question$options2, _question$options2$fi;\n            return (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : (_question$options2$fi = _question$options2.find(opt => opt.optionId === id)) === null || _question$options2$fi === void 0 ? void 0 : _question$options2$fi.text;\n          }).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 43\n        }, this), result.correctOrder && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct order: \", result.correctOrder.join(' ‚Üí ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 39\n        }, this), result.correctAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", result.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 40\n        }, this), result.correctAnswers && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Possible answers: \", result.correctAnswers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetQuiz,\n      className: \"reset-button\",\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedQuiz, \"ZLJSS0Mh6qjVxsipzHPNKj9fSiM=\");\n_c = AdvancedQuiz;\nexport default AdvancedQuiz;\nvar _c;\n$RefreshReg$(_c, \"AdvancedQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","AdvancedQuiz","questionId","onBack","_s","_question$options","_question$options$fin","question","setQuestion","selectedAnswers","setSelectedAnswers","result","setResult","score","setScore","loading","setLoading","fetch","then","res","json","data","console","log","catch","err","error","handleMultipleChoice","optionId","checkAnswer","userAnswerId","handleCheckboxes","current","newSelection","includes","filter","id","handleCheckboxesSubmit","length","userSelectedIds","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","value","handleRangeSubmit","undefined","userValue","handleLocation","event","rect","target","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","userLocation","handleTypeAnswer","preventDefault","input","answer","trim","userAnswer","handleMapClick","lat","lng","initializeMap","mapConfig","mapElement","document","getElementById","innerHTML","center","toFixed","landmarks","map","landmark","name","icon","join","querySelector","addEventListener","e","currentTarget","answerData","method","headers","body","JSON","stringify","prevScore","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderQuestionContent","_selectedAnswers$ques","questionType","options","option","onClick","getButtonClassName","disabled","text","type","checked","onChange","index","item","find","i","min","minValue","max","maxValue","parseInt","mapInstructions","pinpointInstructions","src","imageId","alt","style","onSubmit","placeholder","autoComplete","correctOptionId","onError","display","questionText","opt","correctOptionIds","_question$options2","_question$options2$fi","correctOrder","correctAnswer","correctAnswers","_c","$RefreshReg$"],"sources":["/Users/raghavpant/üíª/quiz/quiz-frontend/src/AdvancedQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst API_URL = \"http://localhost:5001\";\n\nfunction AdvancedQuiz({ questionId, onBack }) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Quiz data received:', data);\n        setQuestion(data);\n        setLoading(false);\n      })\n      .catch((err) => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n\n  const handleMultipleChoice = (optionId) => {\n    if (selectedAnswers[questionId]) return;\n    \n    setSelectedAnswers({ [questionId]: optionId });\n    checkAnswer({ userAnswerId: optionId });\n  };\n\n  const handleCheckboxes = (optionId) => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    \n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: newSelection });\n  };\n\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({ userSelectedIds: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: current.filter(id => id !== itemId) });\n    } else {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: [...current, itemId] });\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({ userOrder: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleRange = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: value });\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({ userValue: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleLocation = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { x, y } });\n    checkAnswer({ userLocation: { x, y } });\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleMapClick = (lat, lng) => {\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { lat, lng } });\n    checkAnswer({ userLocation: { lat, lng } });\n  };\n\n  const initializeMap = (mapConfig) => {\n    // This will be implemented with Leaflet\n    // For now, we'll create a simple clickable div that simulates map coordinates\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && mapConfig) {\n      // Create a simple coordinate system for demonstration\n      mapElement.innerHTML = `\n        <div class=\"map-placeholder\" style=\"\n          width: 100%; \n          height: 100%; \n          background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n          background-size: 40px 40px;\n          position: relative;\n          cursor: crosshair;\n          border-radius: 8px;\n          border: 2px solid #333;\n        \">\n          <div style=\"\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: #333;\n            font-weight: bold;\n          \">\n            <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n            <div>Click anywhere on this map</div>\n            <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n              Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n            </div>\n          </div>\n          ${mapConfig.landmarks.map(landmark => `\n            <div style=\"\n              position: absolute;\n              left: ${((landmark.lng - (mapConfig.center.lng - 0.1)) / 0.2) * 100}%;\n              top: ${((landmark.lat - (mapConfig.center.lat - 0.1)) / 0.2) * 100}%;\n              transform: translate(-50%, -50%);\n              background: white;\n              border: 2px solid #333;\n              border-radius: 50%;\n              width: 30px;\n              height: 30px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              font-size: 1.2rem;\n              cursor: pointer;\n              box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            \" title=\"${landmark.name}\">\n              ${landmark.icon}\n            </div>\n          `).join('')}\n        </div>\n      `;\n      \n      // Add click handler\n      mapElement.querySelector('.map-placeholder').addEventListener('click', (e) => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        \n        // Convert to approximate lat/lng coordinates\n        const lng = mapConfig.center.lng - 0.1 + (x / rect.width) * 0.2;\n        const lat = mapConfig.center.lat - 0.1 + (y / rect.height) * 0.2;\n        \n        handleMapClick(lat, lng);\n      });\n    }\n  };\n\n  const checkAnswer = (answerData) => {\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Answer check result:', data);\n        setResult(data);\n        if (data.result === 'correct') {\n          setScore(prevScore => prevScore + 1);\n        }\n      })\n      .catch((err) => console.error('Failed to check answer:', err));\n  };\n\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading quiz...</div>;\n  }\n\n  if (!question) {\n    return <div>Question not found</div>;\n  }\n\n  const renderQuestionContent = () => {\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return (\n          <div className=\"options-area\">\n            {question.options.map((option) => (\n              <button\n                key={option.optionId}\n                onClick={() => handleMultipleChoice(option.optionId)}\n                className={`option-button ${getButtonClassName(option.optionId)}`}\n                disabled={!!selectedAnswers[questionId]}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div className=\"checkboxes-area\">\n            {question.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswers[questionId] || []).includes(option.optionId)}\n                  onChange={() => handleCheckboxes(option.optionId)}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n            <button \n              onClick={handleCheckboxesSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length === 0}\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'reorder':\n        return (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswers[questionId]?.map((itemId, index) => {\n                  const item = question.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {question.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            <button \n              onClick={handleReorderSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length}\n            >\n              Submit Order\n            </button>\n          </div>\n        );\n\n      case 'range':\n        return (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={question.minValue}\n                max={question.maxValue}\n                value={selectedAnswers[questionId] || question.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswers[questionId] || question.minValue}\n              </div>\n            </div>\n            <button \n              onClick={handleRangeSubmit}\n              className=\"submit-button\"\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'location':\n      case 'pinpoint':\n        return (\n          <div className=\"location-area\">\n            <div className=\"location-instructions\">\n              <p>{question.questionType === 'location' ? question.mapInstructions : question.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={question.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n              />\n              {selectedAnswers[questionId] && (\n                <div \n                  className=\"location-marker\"\n                  style={{\n                    left: `${selectedAnswers[questionId].x * 100}%`,\n                    top: `${selectedAnswers[questionId].y * 100}%`\n                  }}\n                >\n                  üìç\n                </div>\n              )}\n            </div>\n            <div className=\"location-feedback\">\n              <p>Click anywhere on the image above to mark your answer</p>\n            </div>\n          </div>\n        );\n\n      case 'real-world-map':\n        return (\n          <div className=\"real-world-map-area\">\n            <div className=\"map-instructions\">\n              <p>Click on the map to mark your answer. Use the map controls to zoom and pan.</p>\n            </div>\n            <div className=\"map-container\">\n              <div \n                id={`map-${questionId}`} \n                className=\"real-map\"\n                style={{ height: '400px', width: '100%' }}\n              >\n                {/* Map will be rendered here by Leaflet */}\n              </div>\n            </div>\n            <div className=\"map-landmarks\">\n              <h4>Landmarks on this map:</h4>\n              <div className=\"landmarks-list\">\n                {question.mapConfig.landmarks.map((landmark, index) => (\n                  <div key={index} className=\"landmark-item\">\n                    <span className=\"landmark-icon\">{landmark.icon}</span>\n                    <span className=\"landmark-name\">{landmark.name}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"map-feedback\">\n              {selectedAnswers[questionId] ? (\n                <p>You clicked at: {selectedAnswers[questionId].lat.toFixed(4)}, {selectedAnswers[questionId].lng.toFixed(4)}</p>\n              ) : (\n                <p>Click anywhere on the map above to mark your answer</p>\n              )}\n            </div>\n          </div>\n        );\n\n      case 'type-answer':\n        return (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n              />\n              <button type=\"submit\" className=\"submit-button\">\n                Submit\n              </button>\n            </form>\n          </div>\n        );\n\n      default:\n        return <div>Unsupported question type</div>;\n    }\n  };\n\n  const getButtonClassName = (optionId) => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    \n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    \n    return 'disabled';\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-button\">‚Üê Back</button>\n        <h1>Quiz</h1>\n        <p className=\"score\">Score: {score}</p>\n      </div>\n\n      <div className=\"question-area\">\n        {question.imageId && (\n          <img \n            src={question.imageId} \n            alt=\"Quiz context\" \n            className=\"quiz-image\" \n            onError={(e) => {\n              console.error('Failed to load image:', question.imageId);\n              e.target.style.display = 'none';\n            }}\n          />\n        )}\n        <h2>{question.questionText}</h2>\n      </div>\n\n      {renderQuestionContent()}\n      \n      {result && (\n        <div className={`result-message ${result.result}`}>\n          {result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!'}\n          {result.result === 'incorrect' && (\n            <div className=\"feedback-details\">\n              {result.correctOptionId && <p>Correct answer: {question.options?.find(opt => opt.optionId === result.correctOptionId)?.text}</p>}\n              {result.correctOptionIds && <p>Correct answers: {result.correctOptionIds.map(id => question.options?.find(opt => opt.optionId === id)?.text).join(', ')}</p>}\n              {result.correctOrder && <p>Correct order: {result.correctOrder.join(' ‚Üí ')}</p>}\n              {result.correctAnswer && <p>Correct answer: {result.correctAnswer}</p>}\n              {result.correctAnswers && <p>Possible answers: {result.correctAnswers.join(', ')}</p>}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {result && (\n        <button onClick={resetQuiz} className=\"reset-button\">\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default AdvancedQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}