{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuizSelector from './QuizSelector';\nimport AdvancedQuiz from './AdvancedQuiz';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('selector'); // 'selector' or 'quiz'\n  const [selectedQuizType, setSelectedQuizType] = useState(null);\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n  const handleQuizTypeSelect = quizType => {\n    setSelectedQuizType(quizType);\n    // For now, let's map quiz types to question IDs\n    const questionMap = {\n      'multiple-choice': 'q1',\n      'checkboxes': 'q2',\n      'reorder': 'q3',\n      'range': 'q4',\n      'pinpoint': 'q5',\n      'type-answer': 'q6',\n      'real-world-map': 'q7'\n    };\n    setSelectedQuestionId(questionMap[quizType]);\n    setCurrentView('quiz');\n  };\n  const handleBackToSelector = () => {\n    setCurrentView('selector');\n    setSelectedQuizType(null);\n    setSelectedQuestionId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: currentView === 'selector' ? /*#__PURE__*/_jsxDEV(QuizSelector, {\n      onQuizSelect: handleQuizTypeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AdvancedQuiz, {\n      questionId: selectedQuestionId,\n      onBack: handleBackToSelector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6684Do5hDNs1lGE5C7SZsyBf/5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QuizSelector","AdvancedQuiz","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","selectedQuizType","setSelectedQuizType","selectedQuestionId","setSelectedQuestionId","handleQuizTypeSelect","quizType","questionMap","handleBackToSelector","className","children","onQuizSelect","fileName","_jsxFileName","lineNumber","columnNumber","questionId","onBack","_c","$RefreshReg$"],"sources":["/Users/raghavpant/ðŸ’»/quiz/quiz-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QuizSelector from './QuizSelector';\nimport AdvancedQuiz from './AdvancedQuiz';\nimport './App.css';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('selector'); // 'selector' or 'quiz'\n  const [selectedQuizType, setSelectedQuizType] = useState(null);\n  const [selectedQuestionId, setSelectedQuestionId] = useState(null);\n\n  const handleQuizTypeSelect = (quizType) => {\n    setSelectedQuizType(quizType);\n    // For now, let's map quiz types to question IDs\n    const questionMap = {\n      'multiple-choice': 'q1',\n      'checkboxes': 'q2',\n      'reorder': 'q3',\n      'range': 'q4',\n      'pinpoint': 'q5',\n      'type-answer': 'q6',\n      'real-world-map': 'q7'\n    };\n    setSelectedQuestionId(questionMap[quizType]);\n    setCurrentView('quiz');\n  };\n\n  const handleBackToSelector = () => {\n    setCurrentView('selector');\n    setSelectedQuizType(null);\n    setSelectedQuestionId(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {currentView === 'selector' ? (\n        <QuizSelector onQuizSelect={handleQuizTypeSelect} />\n      ) : (\n        <AdvancedQuiz \n          questionId={selectedQuestionId} \n          onBack={handleBackToSelector}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMa,oBAAoB,GAAIC,QAAQ,IAAK;IACzCJ,mBAAmB,CAACI,QAAQ,CAAC;IAC7B;IACA,MAAMC,WAAW,GAAG;MAClB,iBAAiB,EAAE,IAAI;MACvB,YAAY,EAAE,IAAI;MAClB,SAAS,EAAE,IAAI;MACf,OAAO,EAAE,IAAI;MACb,UAAU,EAAE,IAAI;MAChB,aAAa,EAAE,IAAI;MACnB,gBAAgB,EAAE;IACpB,CAAC;IACDH,qBAAqB,CAACG,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC5CN,cAAc,CAAC,MAAM,CAAC;EACxB,CAAC;EAED,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCR,cAAc,CAAC,UAAU,CAAC;IAC1BE,mBAAmB,CAAC,IAAI,CAAC;IACzBE,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBX,WAAW,KAAK,UAAU,gBACzBH,OAAA,CAACH,YAAY;MAACkB,YAAY,EAAEN;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpDnB,OAAA,CAACF,YAAY;MACXsB,UAAU,EAAEb,kBAAmB;MAC/Bc,MAAM,EAAET;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAvCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}