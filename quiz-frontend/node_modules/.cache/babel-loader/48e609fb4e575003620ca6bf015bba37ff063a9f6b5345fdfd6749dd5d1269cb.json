{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/AdvancedQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\nfunction AdvancedQuiz({\n  questionId,\n  onBack\n}) {\n  _s();\n  var _question$options, _question$options$fin;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`).then(res => res.json()).then(data => {\n      console.log('Quiz data received:', data);\n      setQuestion(data);\n      setLoading(false);\n    }).catch(err => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n  const handleMultipleChoice = optionId => {\n    if (selectedAnswers[questionId]) return;\n    setSelectedAnswers({\n      [questionId]: optionId\n    });\n    checkAnswer({\n      userAnswerId: optionId\n    });\n  };\n  const handleCheckboxes = optionId => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: newSelection\n    });\n  };\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({\n        userSelectedIds: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: current.filter(id => id !== itemId)\n      });\n    } else {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: [...current, itemId]\n      });\n    }\n  };\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({\n        userOrder: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleRange = value => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: value\n    });\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({\n        userValue: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleLocation = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        x,\n        y\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const checkAnswer = answerData => {\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log('Answer check result:', data);\n      setResult(data);\n      if (data.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n      }\n    }).catch(err => console.error('Failed to check answer:', err));\n  };\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n  const renderQuestionContent = () => {\n    var _selectedAnswers$ques;\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-area\",\n          children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMultipleChoice(option.optionId),\n            className: `option-button ${getButtonClassName(option.optionId)}`,\n            disabled: !!selectedAnswers[questionId],\n            children: option.text\n          }, option.optionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this);\n      case 'checkboxes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkboxes-area\",\n          children: [question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (selectedAnswers[questionId] || []).includes(option.optionId),\n              onChange: () => handleCheckboxes(option.optionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, option.optionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckboxesSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length === 0,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this);\n      case 'reorder':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click items in the order you want them:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-order\",\n              children: (_selectedAnswers$ques = selectedAnswers[questionId]) === null || _selectedAnswers$ques === void 0 ? void 0 : _selectedAnswers$ques.map((itemId, index) => {\n                const item = question.items.find(i => i.itemId === itemId);\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"order-item\",\n                  children: [index + 1, \". \", item.text]\n                }, itemId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-items\",\n            children: question.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReorder(item.itemId),\n              className: `reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`,\n              children: item.text\n            }, item.itemId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReorderSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length,\n            children: \"Submit Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.minValue,\n              max: question.maxValue,\n              value: selectedAnswers[questionId] || question.minValue,\n              onChange: e => handleRange(parseInt(e.target.value)),\n              className: \"range-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"range-value\",\n              children: [\"Selected: \", selectedAnswers[questionId] || question.minValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRangeSubmit,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this);\n      case 'location':\n      case 'pinpoint':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click on the image to mark your answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: question.imageId,\n              alt: \"Quiz context\",\n              className: \"quiz-image clickable\",\n              onClick: handleLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), selectedAnswers[questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-marker\",\n              style: {\n                left: `${selectedAnswers[questionId].x * 100}%`,\n                top: `${selectedAnswers[questionId].y * 100}%`\n              },\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this);\n      case 'type-answer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-answer-area\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTypeAnswer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answer\",\n              placeholder: \"Type your answer here...\",\n              className: \"answer-input\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getButtonClassName = optionId => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    return 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [question.imageId && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.imageId,\n        alt: \"Quiz context\",\n        className: \"quiz-image\",\n        onError: e => {\n          console.error('Failed to load image:', question.imageId);\n          e.target.style.display = 'none';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), renderQuestionContent(), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${result.result}`,\n      children: [result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!', result.result === 'incorrect' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-details\",\n        children: [result.correctOptionId && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : (_question$options$fin = _question$options.find(opt => opt.optionId === result.correctOptionId)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 42\n        }, this), result.correctOptionIds && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answers: \", result.correctOptionIds.map(id => {\n            var _question$options2, _question$options2$fi;\n            return (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : (_question$options2$fi = _question$options2.find(opt => opt.optionId === id)) === null || _question$options2$fi === void 0 ? void 0 : _question$options2$fi.text;\n          }).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 43\n        }, this), result.correctOrder && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct order: \", result.correctOrder.join(' → ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 39\n        }, this), result.correctAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", result.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 40\n        }, this), result.correctAnswers && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Possible answers: \", result.correctAnswers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetQuiz,\n      className: \"reset-button\",\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedQuiz, \"ZLJSS0Mh6qjVxsipzHPNKj9fSiM=\");\n_c = AdvancedQuiz;\nexport default AdvancedQuiz;\nvar _c;\n$RefreshReg$(_c, \"AdvancedQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","AdvancedQuiz","questionId","onBack","_s","_question$options","_question$options$fin","question","setQuestion","selectedAnswers","setSelectedAnswers","result","setResult","score","setScore","loading","setLoading","fetch","then","res","json","data","console","log","catch","err","error","handleMultipleChoice","optionId","checkAnswer","userAnswerId","handleCheckboxes","current","newSelection","includes","filter","id","handleCheckboxesSubmit","length","userSelectedIds","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","value","handleRangeSubmit","undefined","userValue","handleLocation","event","rect","target","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","userLocation","handleTypeAnswer","preventDefault","input","answer","trim","userAnswer","answerData","method","headers","body","JSON","stringify","prevScore","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderQuestionContent","_selectedAnswers$ques","questionType","options","map","option","onClick","getButtonClassName","disabled","text","type","checked","onChange","index","item","find","i","min","minValue","max","maxValue","e","parseInt","src","imageId","alt","style","onSubmit","name","placeholder","autoComplete","correctOptionId","onError","display","questionText","opt","correctOptionIds","_question$options2","_question$options2$fi","join","correctOrder","correctAnswer","correctAnswers","_c","$RefreshReg$"],"sources":["/Users/raghavpant/💻/quiz/quiz-frontend/src/AdvancedQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst API_URL = \"http://localhost:5001\";\n\nfunction AdvancedQuiz({ questionId, onBack }) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Quiz data received:', data);\n        setQuestion(data);\n        setLoading(false);\n      })\n      .catch((err) => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n\n  const handleMultipleChoice = (optionId) => {\n    if (selectedAnswers[questionId]) return;\n    \n    setSelectedAnswers({ [questionId]: optionId });\n    checkAnswer({ userAnswerId: optionId });\n  };\n\n  const handleCheckboxes = (optionId) => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    \n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: newSelection });\n  };\n\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({ userSelectedIds: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: current.filter(id => id !== itemId) });\n    } else {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: [...current, itemId] });\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({ userOrder: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleRange = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: value });\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({ userValue: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleLocation = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { x, y } });\n    checkAnswer({ userLocation: { x, y } });\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const checkAnswer = (answerData) => {\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Answer check result:', data);\n        setResult(data);\n        if (data.result === 'correct') {\n          setScore(prevScore => prevScore + 1);\n        }\n      })\n      .catch((err) => console.error('Failed to check answer:', err));\n  };\n\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading quiz...</div>;\n  }\n\n  if (!question) {\n    return <div>Question not found</div>;\n  }\n\n  const renderQuestionContent = () => {\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return (\n          <div className=\"options-area\">\n            {question.options.map((option) => (\n              <button\n                key={option.optionId}\n                onClick={() => handleMultipleChoice(option.optionId)}\n                className={`option-button ${getButtonClassName(option.optionId)}`}\n                disabled={!!selectedAnswers[questionId]}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div className=\"checkboxes-area\">\n            {question.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswers[questionId] || []).includes(option.optionId)}\n                  onChange={() => handleCheckboxes(option.optionId)}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n            <button \n              onClick={handleCheckboxesSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length === 0}\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'reorder':\n        return (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswers[questionId]?.map((itemId, index) => {\n                  const item = question.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {question.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            <button \n              onClick={handleReorderSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length}\n            >\n              Submit Order\n            </button>\n          </div>\n        );\n\n      case 'range':\n        return (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={question.minValue}\n                max={question.maxValue}\n                value={selectedAnswers[questionId] || question.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswers[questionId] || question.minValue}\n              </div>\n            </div>\n            <button \n              onClick={handleRangeSubmit}\n              className=\"submit-button\"\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'location':\n      case 'pinpoint':\n        return (\n          <div className=\"location-area\">\n            <div className=\"location-instructions\">\n              <p>Click on the image to mark your answer:</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={question.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n              />\n              {selectedAnswers[questionId] && (\n                <div \n                  className=\"location-marker\"\n                  style={{\n                    left: `${selectedAnswers[questionId].x * 100}%`,\n                    top: `${selectedAnswers[questionId].y * 100}%`\n                  }}\n                >\n                  📍\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 'type-answer':\n        return (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n              />\n              <button type=\"submit\" className=\"submit-button\">\n                Submit\n              </button>\n            </form>\n          </div>\n        );\n\n      default:\n        return <div>Unsupported question type</div>;\n    }\n  };\n\n  const getButtonClassName = (optionId) => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    \n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    \n    return 'disabled';\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-button\">← Back</button>\n        <h1>Quiz</h1>\n        <p className=\"score\">Score: {score}</p>\n      </div>\n\n      <div className=\"question-area\">\n        {question.imageId && (\n          <img \n            src={question.imageId} \n            alt=\"Quiz context\" \n            className=\"quiz-image\" \n            onError={(e) => {\n              console.error('Failed to load image:', question.imageId);\n              e.target.style.display = 'none';\n            }}\n          />\n        )}\n        <h2>{question.questionText}</h2>\n      </div>\n\n      {renderQuestionContent()}\n      \n      {result && (\n        <div className={`result-message ${result.result}`}>\n          {result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!'}\n          {result.result === 'incorrect' && (\n            <div className=\"feedback-details\">\n              {result.correctOptionId && <p>Correct answer: {question.options?.find(opt => opt.optionId === result.correctOptionId)?.text}</p>}\n              {result.correctOptionIds && <p>Correct answers: {result.correctOptionIds.map(id => question.options?.find(opt => opt.optionId === id)?.text).join(', ')}</p>}\n              {result.correctOrder && <p>Correct order: {result.correctOrder.join(' → ')}</p>}\n              {result.correctAnswer && <p>Correct answer: {result.correctAnswer}</p>}\n              {result.correctAnswers && <p>Possible answers: {result.correctAnswers.join(', ')}</p>}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {result && (\n        <button onClick={resetQuiz} className=\"reset-button\">\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default AdvancedQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}