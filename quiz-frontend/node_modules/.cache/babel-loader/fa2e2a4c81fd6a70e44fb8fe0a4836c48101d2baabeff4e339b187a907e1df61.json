{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/MixedQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './AdvancedQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    document.body.appendChild(confetti);\n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\nfunction MixedQuiz({\n  onBack\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [results, setResults] = useState({});\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const mapInstanceRef = useRef(null);\n  useEffect(() => {\n    addConfettiStyles();\n    fetch(`${API_URL}/api/mixed-quiz`).then(res => res.json()).then(data => {\n      console.log('Mixed quiz data received:', data);\n      setQuestions(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Failed to fetch mixed quiz data:', err);\n      setLoading(false);\n    });\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion && currentQuestion.questionType === 'real-world-map' && currentQuestion.mapConfig) {\n      setTimeout(() => {\n        initializeMap(currentQuestion.mapConfig, currentQuestion.questionId);\n      }, 100);\n    }\n  }, [currentQuestionIndex, questions]);\n  const currentQuestion = questions[currentQuestionIndex];\n  const handleMultipleChoice = optionId => {\n    if (selectedAnswers[currentQuestion.questionId]) return;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [currentQuestion.questionId]: optionId\n    });\n    checkAnswer({\n      userAnswerId: optionId\n    });\n  };\n  const handleCheckboxes = optionId => {\n    const current = selectedAnswers[currentQuestion.questionId] || [];\n    let newSelection;\n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [currentQuestion.questionId]: newSelection\n    });\n  };\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[currentQuestion.questionId] && selectedAnswers[currentQuestion.questionId].length > 0) {\n      checkAnswer({\n        userSelectedIds: selectedAnswers[currentQuestion.questionId]\n      });\n    }\n  };\n  const handleRange = value => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [currentQuestion.questionId]: value\n    });\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[currentQuestion.questionId] !== undefined) {\n      checkAnswer({\n        userValue: selectedAnswers[currentQuestion.questionId]\n      });\n    }\n  };\n  const handleLocation = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [currentQuestion.questionId]: {\n        x,\n        y\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleMapClick = (lat, lng) => {\n    if (!currentQuestion) return;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [currentQuestion.questionId]: {\n        lat,\n        lng\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        lat,\n        lng\n      }\n    });\n  };\n  const initializeMap = (mapConfig, questionId) => {\n    if (!mapConfig || !questionId) return;\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && !mapInstanceRef.current) {\n      try {\n        const map = L.map(`map-${questionId}`, {\n          center: [mapConfig.center.lat, mapConfig.center.lng],\n          zoom: mapConfig.zoom || 10,\n          zoomControl: true,\n          attributionControl: true\n        });\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© OpenStreetMap contributors',\n          maxZoom: 18\n        }).addTo(map);\n        mapConfig.landmarks.forEach(landmark => {\n          const marker = L.marker([landmark.lat, landmark.lng], {\n            title: landmark.name\n          }).addTo(map);\n          marker.bindPopup(`\n            <div style=\"text-align: center;\">\n              <div style=\"font-size: 1.5rem; margin-bottom: 0.5rem;\">${landmark.icon}</div>\n              <strong>${landmark.name}</strong>\n            </div>\n          `);\n        });\n        map.on('click', e => {\n          const {\n            lat,\n            lng\n          } = e.latlng;\n          handleMapClick(lat, lng);\n          const userMarker = L.marker([lat, lng], {\n            icon: L.divIcon({\n              className: 'user-marker',\n              html: '📍',\n              iconSize: [30, 30],\n              iconAnchor: [15, 30]\n            })\n          }).addTo(map);\n          setTimeout(() => {\n            map.removeLayer(userMarker);\n          }, 3000);\n        });\n        mapInstanceRef.current = map;\n      } catch (error) {\n        console.error('Failed to initialize map:', error);\n      }\n    }\n  };\n  const checkAnswer = answerData => {\n    if (!currentQuestion) return;\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        questionId: currentQuestion.questionId,\n        answer: answerData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log('Answer check result:', data);\n      setResults({\n        ...results,\n        [currentQuestion.questionId]: data\n      });\n      if (data.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      }\n    }).catch(err => console.error('Failed to check answer:', err));\n  };\n  const nextQuestion = () => {\n    if (mapInstanceRef.current) {\n      mapInstanceRef.current.remove();\n      mapInstanceRef.current = null;\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswers({});\n    setResults({});\n    setScore(0);\n    setQuizCompleted(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading mixed quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No questions available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 12\n    }, this);\n  }\n  if (quizCompleted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onBack,\n          className: \"back-button\",\n          children: \"\\u2190 Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quiz Completed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Final Score: \", score, \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You answered \", score, \" out of \", questions.length, \" questions correctly!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetQuiz,\n            className: \"reset-button\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onBack,\n            className: \"back-button\",\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  }\n  const renderQuestionContent = () => {\n    if (!currentQuestion) return null;\n    switch (currentQuestion.questionType) {\n      case 'multiple-choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-area\",\n          children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMultipleChoice(option.optionId),\n            className: `option-button ${getButtonClassName(option.optionId)}`,\n            disabled: !!selectedAnswers[currentQuestion.questionId],\n            children: option.text\n          }, option.optionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this);\n      case 'checkboxes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkboxes-area\",\n          children: [currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (selectedAnswers[currentQuestion.questionId] || []).includes(option.optionId),\n              onChange: () => handleCheckboxes(option.optionId),\n              disabled: !!results[currentQuestion.questionId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, option.optionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)), !results[currentQuestion.questionId] && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckboxesSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[currentQuestion.questionId] || selectedAnswers[currentQuestion.questionId].length === 0,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this);\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: currentQuestion.minValue,\n              max: currentQuestion.maxValue,\n              value: selectedAnswers[currentQuestion.questionId] || currentQuestion.minValue,\n              onChange: e => handleRange(parseInt(e.target.value)),\n              className: \"range-input\",\n              disabled: !!results[currentQuestion.questionId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"range-value\",\n              children: [\"Selected: \", selectedAnswers[currentQuestion.questionId] || currentQuestion.minValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), !results[currentQuestion.questionId] && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRangeSubmit,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      case 'pinpoint':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pinpoint-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentQuestion.pinpointInstructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentQuestion.imageId,\n              alt: \"Quiz context\",\n              className: \"quiz-image clickable\",\n              onClick: handleLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), selectedAnswers[currentQuestion.questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pinpoint-marker\",\n              style: {\n                left: `${selectedAnswers[currentQuestion.questionId].x * 100}%`,\n                top: `${selectedAnswers[currentQuestion.questionId].y * 100}%`\n              },\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this);\n      case 'real-world-map':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"real-world-map-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click on the map to mark your answer.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `map-${currentQuestion.questionId}`,\n              className: \"real-map\",\n              style: {\n                height: '400px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this);\n      case 'type-answer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-answer-area\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTypeAnswer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answer\",\n              placeholder: \"Type your answer here...\",\n              className: \"answer-input\",\n              autoComplete: \"off\",\n              disabled: !!results[currentQuestion.questionId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), !results[currentQuestion.questionId] && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getButtonClassName = optionId => {\n    const result = results[currentQuestion.questionId];\n    if (!selectedAnswers[currentQuestion.questionId] || !result) {\n      return '';\n    }\n    if (result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    if (selectedAnswers[currentQuestion.questionId] === optionId && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    if (selectedAnswers[currentQuestion.questionId] === optionId && result.result === 'correct') {\n      return 'correct';\n    }\n    return 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mixed Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [currentQuestion.imageId && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentQuestion.imageId,\n        alt: \"Quiz context\",\n        className: \"quiz-image\",\n        onError: e => {\n          console.error('Failed to load image:', currentQuestion.imageId);\n          e.target.style.display = 'none';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), renderQuestionContent(), results[currentQuestion.questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${results[currentQuestion.questionId].result}`,\n      children: [results[currentQuestion.questionId].result === 'correct' ? '🎉 Correct! Well done!' : '❌ Not quite!', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextQuestion,\n        className: \"next-button\",\n        children: currentQuestionIndex < questions.length - 1 ? 'Next Question →' : 'Finish Quiz'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n_s(MixedQuiz, \"+TCGV+MVdSeiAVfY71j4RHbYzHg=\");\n_c = MixedQuiz;\nexport default MixedQuiz;\nvar _c;\n$RefreshReg$(_c, \"MixedQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","jsxDEV","_jsxDEV","API_URL","createConfetti","colors","confettiCount","i","confetti","document","createElement","style","position","left","Math","random","top","width","height","backgroundColor","floor","length","borderRadius","pointerEvents","zIndex","animation","body","appendChild","setTimeout","remove","addConfettiStyles","getElementById","id","textContent","head","MixedQuiz","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","results","setResults","score","setScore","loading","setLoading","quizCompleted","setQuizCompleted","mapInstanceRef","fetch","then","res","json","data","console","log","catch","err","error","current","currentQuestion","questionType","mapConfig","initializeMap","questionId","handleMultipleChoice","optionId","checkAnswer","userAnswerId","handleCheckboxes","newSelection","includes","filter","handleCheckboxesSubmit","userSelectedIds","handleRange","value","handleRangeSubmit","undefined","userValue","handleLocation","event","rect","target","getBoundingClientRect","x","clientX","y","clientY","userLocation","handleTypeAnswer","preventDefault","input","answer","trim","userAnswer","handleMapClick","lat","lng","mapElement","map","center","zoom","zoomControl","attributionControl","tileLayer","attribution","maxZoom","addTo","landmarks","forEach","landmark","marker","title","name","bindPopup","icon","on","e","latlng","userMarker","divIcon","className","html","iconSize","iconAnchor","removeLayer","answerData","method","headers","JSON","stringify","result","prevScore","nextQuestion","resetQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderQuestionContent","options","option","getButtonClassName","disabled","text","type","checked","onChange","min","minValue","max","maxValue","parseInt","pinpointInstructions","src","imageId","alt","onSubmit","placeholder","autoComplete","correctOptionId","onError","display","questionText","_c","$RefreshReg$"],"sources":["/Users/raghavpant/💻/quiz/quiz-frontend/src/MixedQuiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './AdvancedQuiz.css';\n\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    \n    document.body.appendChild(confetti);\n    \n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\nfunction MixedQuiz({ onBack }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [results, setResults] = useState({});\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n\n  const mapInstanceRef = useRef(null);\n\n  useEffect(() => {\n    addConfettiStyles();\n    \n    fetch(`${API_URL}/api/mixed-quiz`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Mixed quiz data received:', data);\n        setQuestions(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error('Failed to fetch mixed quiz data:', err);\n        setLoading(false);\n      });\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion && currentQuestion.questionType === 'real-world-map' && currentQuestion.mapConfig) {\n      setTimeout(() => {\n        initializeMap(currentQuestion.mapConfig, currentQuestion.questionId);\n      }, 100);\n    }\n  }, [currentQuestionIndex, questions]);\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const handleMultipleChoice = (optionId) => {\n    if (selectedAnswers[currentQuestion.questionId]) return;\n    \n    setSelectedAnswers({ ...selectedAnswers, [currentQuestion.questionId]: optionId });\n    checkAnswer({ userAnswerId: optionId });\n  };\n\n  const handleCheckboxes = (optionId) => {\n    const current = selectedAnswers[currentQuestion.questionId] || [];\n    let newSelection;\n    \n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [currentQuestion.questionId]: newSelection });\n  };\n\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[currentQuestion.questionId] && selectedAnswers[currentQuestion.questionId].length > 0) {\n      checkAnswer({ userSelectedIds: selectedAnswers[currentQuestion.questionId] });\n    }\n  };\n\n  const handleRange = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [currentQuestion.questionId]: value });\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[currentQuestion.questionId] !== undefined) {\n      checkAnswer({ userValue: selectedAnswers[currentQuestion.questionId] });\n    }\n  };\n\n  const handleLocation = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({ ...selectedAnswers, [currentQuestion.questionId]: { x, y } });\n    checkAnswer({ userLocation: { x, y } });\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleMapClick = (lat, lng) => {\n    if (!currentQuestion) return;\n    \n    setSelectedAnswers({ ...selectedAnswers, [currentQuestion.questionId]: { lat, lng } });\n    checkAnswer({ userLocation: { lat, lng } });\n  };\n\n  const initializeMap = (mapConfig, questionId) => {\n    if (!mapConfig || !questionId) return;\n    \n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && !mapInstanceRef.current) {\n      try {\n        const map = L.map(`map-${questionId}`, {\n          center: [mapConfig.center.lat, mapConfig.center.lng],\n          zoom: mapConfig.zoom || 10,\n          zoomControl: true,\n          attributionControl: true\n        });\n\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© OpenStreetMap contributors',\n          maxZoom: 18\n        }).addTo(map);\n\n        mapConfig.landmarks.forEach(landmark => {\n          const marker = L.marker([landmark.lat, landmark.lng], {\n            title: landmark.name\n          }).addTo(map);\n          \n          marker.bindPopup(`\n            <div style=\"text-align: center;\">\n              <div style=\"font-size: 1.5rem; margin-bottom: 0.5rem;\">${landmark.icon}</div>\n              <strong>${landmark.name}</strong>\n            </div>\n          `);\n        });\n\n        map.on('click', (e) => {\n          const { lat, lng } = e.latlng;\n          handleMapClick(lat, lng);\n          \n          const userMarker = L.marker([lat, lng], {\n            icon: L.divIcon({\n              className: 'user-marker',\n              html: '📍',\n              iconSize: [30, 30],\n              iconAnchor: [15, 30]\n            })\n          }).addTo(map);\n          \n          setTimeout(() => {\n            map.removeLayer(userMarker);\n          }, 3000);\n        });\n\n        mapInstanceRef.current = map;\n      } catch (error) {\n        console.error('Failed to initialize map:', error);\n      }\n    }\n  };\n\n  const checkAnswer = (answerData) => {\n    if (!currentQuestion) return;\n    \n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        questionId: currentQuestion.questionId,\n        answer: answerData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Answer check result:', data);\n        setResults({ ...results, [currentQuestion.questionId]: data });\n        \n        if (data.result === 'correct') {\n          setScore(prevScore => prevScore + 1);\n          // Trigger confetti animation for correct answers\n          createConfetti();\n        }\n      })\n      .catch((err) => console.error('Failed to check answer:', err));\n  };\n\n  const nextQuestion = () => {\n    if (mapInstanceRef.current) {\n      mapInstanceRef.current.remove();\n      mapInstanceRef.current = null;\n    }\n    \n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswers({});\n    setResults({});\n    setScore(0);\n    setQuizCompleted(false);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading mixed quiz...</div>;\n  }\n\n  if (questions.length === 0) {\n    return <div>No questions available</div>;\n  }\n\n  if (quizCompleted) {\n    return (\n      <div className=\"quiz-container\">\n        <div className=\"quiz-header\">\n          <button onClick={onBack} className=\"back-button\">← Back</button>\n          <h1>Quiz Completed!</h1>\n        </div>\n        <div className=\"quiz-results\">\n          <h2>Final Score: {score}/{questions.length}</h2>\n          <p>You answered {score} out of {questions.length} questions correctly!</p>\n          <div className=\"result-actions\">\n            <button onClick={resetQuiz} className=\"reset-button\">Try Again</button>\n            <button onClick={onBack} className=\"back-button\">Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const renderQuestionContent = () => {\n    if (!currentQuestion) return null;\n\n    switch (currentQuestion.questionType) {\n      case 'multiple-choice':\n        return (\n          <div className=\"options-area\">\n            {currentQuestion.options.map((option) => (\n              <button\n                key={option.optionId}\n                onClick={() => handleMultipleChoice(option.optionId)}\n                className={`option-button ${getButtonClassName(option.optionId)}`}\n                disabled={!!selectedAnswers[currentQuestion.questionId]}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div className=\"checkboxes-area\">\n            {currentQuestion.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswers[currentQuestion.questionId] || []).includes(option.optionId)}\n                  onChange={() => handleCheckboxes(option.optionId)}\n                  disabled={!!results[currentQuestion.questionId]}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n            {!results[currentQuestion.questionId] && (\n              <button \n                onClick={handleCheckboxesSubmit}\n                className=\"submit-button\"\n                disabled={!selectedAnswers[currentQuestion.questionId] || selectedAnswers[currentQuestion.questionId].length === 0}\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        );\n\n      case 'range':\n        return (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={currentQuestion.minValue}\n                max={currentQuestion.maxValue}\n                value={selectedAnswers[currentQuestion.questionId] || currentQuestion.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n                disabled={!!results[currentQuestion.questionId]}\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswers[currentQuestion.questionId] || currentQuestion.minValue}\n              </div>\n            </div>\n            {!results[currentQuestion.questionId] && (\n              <button \n                onClick={handleRangeSubmit}\n                className=\"submit-button\"\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        );\n\n      case 'pinpoint':\n        return (\n          <div className=\"pinpoint-area\">\n            <div className=\"pinpoint-instructions\">\n              <p>{currentQuestion.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={currentQuestion.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n              />\n              {selectedAnswers[currentQuestion.questionId] && (\n                <div \n                  className=\"pinpoint-marker\"\n                  style={{\n                    left: `${selectedAnswers[currentQuestion.questionId].x * 100}%`,\n                    top: `${selectedAnswers[currentQuestion.questionId].y * 100}%`\n                  }}\n                >\n                  🎯\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 'real-world-map':\n        return (\n          <div className=\"real-world-map-area\">\n            <div className=\"map-instructions\">\n              <p>Click on the map to mark your answer.</p>\n            </div>\n            <div className=\"map-container\">\n              <div \n                id={`map-${currentQuestion.questionId}`} \n                className=\"real-map\"\n                style={{ height: '400px', width: '100%' }}\n              />\n            </div>\n          </div>\n        );\n\n      case 'type-answer':\n        return (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n                disabled={!!results[currentQuestion.questionId]}\n              />\n              {!results[currentQuestion.questionId] && (\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit\n                </button>\n              )}\n            </form>\n          </div>\n        );\n\n      default:\n        return <div>Unsupported question type</div>;\n    }\n  };\n\n  const getButtonClassName = (optionId) => {\n    const result = results[currentQuestion.questionId];\n    if (!selectedAnswers[currentQuestion.questionId] || !result) {\n      return '';\n    }\n    \n    if (result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    \n    if (selectedAnswers[currentQuestion.questionId] === optionId && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    \n    if (selectedAnswers[currentQuestion.questionId] === optionId && result.result === 'correct') {\n      return 'correct';\n    }\n    \n    return 'disabled';\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-button\">← Back</button>\n        <h1>Mixed Quiz</h1>\n        <p className=\"score\">Score: {score}/{questions.length}</p>\n      </div>\n\n      <div className=\"quiz-progress\">\n        <p>Question {currentQuestionIndex + 1} of {questions.length}</p>\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n          />\n        </div>\n      </div>\n\n      <div className=\"question-area\">\n        {currentQuestion.imageId && (\n          <img \n            src={currentQuestion.imageId} \n            alt=\"Quiz context\" \n            className=\"quiz-image\" \n            onError={(e) => {\n              console.error('Failed to load image:', currentQuestion.imageId);\n              e.target.style.display = 'none';\n            }}\n          />\n        )}\n        <h2>{currentQuestion.questionText}</h2>\n      </div>\n\n      {renderQuestionContent()}\n      \n      {results[currentQuestion.questionId] && (\n        <div className={`result-message ${results[currentQuestion.questionId].result}`}>\n          {results[currentQuestion.questionId].result === 'correct' ? \n            '🎉 Correct! Well done!' : \n            '❌ Not quite!'\n          }\n          <button onClick={nextQuestion} className=\"next-button\">\n            {currentQuestionIndex < questions.length - 1 ? 'Next Question →' : 'Finish Quiz'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MixedQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}