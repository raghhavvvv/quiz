{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/CountryFlagQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CountryFlagQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    document.body.appendChild(confetti);\n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\nfunction CountryFlagQuiz({\n  onBack\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n  const flagQuestionIds = ['flag1', 'flag2', 'flag3', 'flag4', 'flag5', 'flag6', 'flag7', 'flag8', 'flag9', 'flag10'];\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, []);\n  const loadQuestions = async () => {\n    try {\n      const questionPromises = flagQuestionIds.map(id => fetch(`${API_URL}/api/quiz/${id}`).then(res => res.json()));\n      const loadedQuestions = await Promise.all(questionPromises);\n      setQuestions(loadedQuestions);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = optionId => {\n    if (isAnswered) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({\n        userAnswerId: selectedAnswer\n      });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({\n        userSelectedIds: selectedAnswer\n      });\n    }\n  };\n  const submitAnswer = async answerData => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n      const result = await response.json();\n      if (result.result === 'correct') {\n        setScore(score + 1);\n        setFeedback({\n          type: 'correct',\n          message: 'Correct!'\n        });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({\n          type: 'incorrect',\n          message: 'Incorrect!'\n        });\n      }\n      setTimeout(() => {\n        if (currentQuestionIndex < questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setSelectedAnswer(null);\n          setIsAnswered(false);\n          setFeedback(null);\n        } else {\n          setShowResult(true);\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-quiz-loading\",\n      children: \"Loading country flag quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-quiz-loading\",\n      children: \"No questions available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-quiz-result\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFF3\\uFE0F Country Flag Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total\",\n            children: [\"/ \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-message\",\n          children: score >= 8 ? \"Outstanding! You're a geography expert!\" : score >= 6 ? \"Great job! You know your world flags well.\" : score >= 4 ? \"Good effort! Keep exploring world geography.\" : \"Keep learning! There are many flags to discover.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetQuiz,\n            className: \"retry-button\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onBack,\n            className: \"back-button\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  if (!currentQuestion || !currentQuestion.options) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag-quiz-loading\",\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country-flag-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-btn\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentQuestion.imageId,\n          alt: \"Country flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), currentQuestion.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedAnswer === option.optionId ? 'selected' : ''} ${isAnswered ? 'disabled' : ''}`,\n          onClick: () => handleAnswerSelect(option.optionId),\n          disabled: isAnswered,\n          children: option.text\n        }, option.optionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'checkboxes' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxes-area\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (selectedAnswer || []).includes(option.optionId),\n            onChange: () => handleAnswerSelect(option.optionId),\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)]\n        }, option.optionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'type-answer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-answer-area\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTypeAnswer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answer\",\n            placeholder: \"Type your answer here...\",\n            className: \"answer-input\",\n            autoComplete: \"off\",\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${feedback.type}`,\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), (currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmitAnswer,\n        disabled: !selectedAnswer || currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0 || isAnswered,\n        children: isAnswered ? 'Next Question...' : 'Submit Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryFlagQuiz, \"Q9MJ+T00Bf0DE0yenNUxp5+zLsA=\");\n_c = CountryFlagQuiz;\nexport default CountryFlagQuiz;\nvar _c;\n$RefreshReg$(_c, \"CountryFlagQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","createConfetti","colors","confettiCount","i","confetti","document","createElement","style","position","left","Math","random","top","width","height","backgroundColor","floor","length","borderRadius","pointerEvents","zIndex","animation","body","appendChild","setTimeout","remove","addConfettiStyles","getElementById","id","textContent","head","CountryFlagQuiz","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","isAnswered","setIsAnswered","loading","setLoading","feedback","setFeedback","flagQuestionIds","loadQuestions","questionPromises","map","fetch","then","res","json","loadedQuestions","Promise","all","error","console","handleAnswerSelect","optionId","currentQuestion","questionType","current","newSelection","includes","filter","handleTypeAnswer","event","preventDefault","input","target","answer","value","trim","submitAnswer","userAnswer","handleSubmitAnswer","userAnswerId","userSelectedIds","answerData","response","method","headers","JSON","stringify","questionId","result","type","message","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","src","imageId","alt","questionText","option","disabled","text","checked","onChange","onSubmit","name","placeholder","autoComplete","_c","$RefreshReg$"],"sources":["/Users/raghavpant/💻/quiz/quiz-frontend/src/CountryFlagQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CountryFlagQuiz.css';\n\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    \n    document.body.appendChild(confetti);\n    \n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\nfunction CountryFlagQuiz({ onBack }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n\n  const flagQuestionIds = ['flag1', 'flag2', 'flag3', 'flag4', 'flag5', 'flag6', 'flag7', 'flag8', 'flag9', 'flag10'];\n\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, []);\n\n  const loadQuestions = async () => {\n    try {\n      const questionPromises = flagQuestionIds.map(id => \n        fetch(`${API_URL}/api/quiz/${id}`).then(res => res.json())\n      );\n      const loadedQuestions = await Promise.all(questionPromises);\n      setQuestions(loadedQuestions);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = (optionId) => {\n    if (isAnswered) return;\n    \n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      \n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      \n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    \n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({ userAnswerId: selectedAnswer });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({ userSelectedIds: selectedAnswer });\n    }\n  };\n\n  const submitAnswer = async (answerData) => {\n    if (isAnswered) return;\n\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n\n      const result = await response.json();\n      \n      if (result.result === 'correct') {\n        setScore(score + 1);\n        setFeedback({ type: 'correct', message: 'Correct!' });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({ type: 'incorrect', message: 'Incorrect!' });\n      }\n\n      setTimeout(() => {\n        if (currentQuestionIndex < questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setSelectedAnswer(null);\n          setIsAnswered(false);\n          setFeedback(null);\n        } else {\n          setShowResult(true);\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n\n  if (loading) {\n    return <div className=\"flag-quiz-loading\">Loading country flag quiz...</div>;\n  }\n\n  if (questions.length === 0) {\n    return <div className=\"flag-quiz-loading\">No questions available. Please try again later.</div>;\n  }\n\n  if (showResult) {\n    return (\n      <div className=\"flag-quiz-result\">\n        <div className=\"result-content\">\n          <h1>🏳️ Country Flag Quiz Complete!</h1>\n          <div className=\"score-display\">\n            <span className=\"score\">{score}</span>\n            <span className=\"total\">/ {questions.length}</span>\n          </div>\n          <p className=\"score-message\">\n            {score >= 8 ? \"Outstanding! You're a geography expert!\" :\n             score >= 6 ? \"Great job! You know your world flags well.\" :\n             score >= 4 ? \"Good effort! Keep exploring world geography.\" :\n             \"Keep learning! There are many flags to discover.\"}\n          </p>\n          <div className=\"result-actions\">\n            <button onClick={resetQuiz} className=\"retry-button\">Try Again</button>\n            <button onClick={onBack} className=\"back-button\">Back to Home</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  if (!currentQuestion || !currentQuestion.options) {\n    return <div className=\"flag-quiz-loading\">Loading question...</div>;\n  }\n\n  return (\n    <div className=\"country-flag-quiz\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-btn\">← Back</button>\n        <div className=\"progress\">\n          <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"score-display\">Score: {score}</div>\n      </div>\n\n      <div className=\"question-container\">\n        <div className=\"question-image\">\n          <img src={currentQuestion.imageId} alt=\"Country flag\" />\n        </div>\n        \n        <h2 className=\"question-text\">{currentQuestion.questionText}</h2>\n        \n        {currentQuestion.questionType === 'multiple-choice' && (\n          <div className=\"options-grid\">\n            {currentQuestion.options.map((option) => (\n              <button\n                key={option.optionId}\n                className={`option-button ${\n                  selectedAnswer === option.optionId ? 'selected' : ''\n                } ${isAnswered ? 'disabled' : ''}`}\n                onClick={() => handleAnswerSelect(option.optionId)}\n                disabled={isAnswered}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'checkboxes' && (\n          <div className=\"checkboxes-area\">\n            {currentQuestion.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswer || []).includes(option.optionId)}\n                  onChange={() => handleAnswerSelect(option.optionId)}\n                  disabled={isAnswered}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'type-answer' && (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n                disabled={isAnswered}\n              />\n              {!isAnswered && (\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit Answer\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n\n        {feedback && (\n          <div className={`feedback ${feedback.type}`}>\n            {feedback.message}\n          </div>\n        )}\n\n        {(currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && (\n          <button\n            className=\"submit-button\"\n            onClick={handleSubmitAnswer}\n            disabled={\n              !selectedAnswer || \n              (currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0) || \n              isAnswered\n            }\n          >\n            {isAnswered ? 'Next Question...' : 'Submit Answer'}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CountryFlagQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}