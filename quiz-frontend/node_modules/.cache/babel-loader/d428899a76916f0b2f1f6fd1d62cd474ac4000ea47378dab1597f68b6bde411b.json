{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/AdvancedQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\nfunction AdvancedQuiz({\n  questionId,\n  onBack\n}) {\n  _s();\n  var _question$options, _question$options$fin;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`).then(res => res.json()).then(data => {\n      console.log('Quiz data received:', data);\n      setQuestion(data);\n      setLoading(false);\n\n      // Initialize map if it's a real-world map question\n      if (data.questionType === 'real-world-map' && data.mapConfig) {\n        // Use setTimeout to ensure DOM is ready\n        setTimeout(() => {\n          if (data.mapConfig) {\n            initializeMap(data.mapConfig);\n          }\n        }, 100);\n      }\n    }).catch(err => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n  const handleMultipleChoice = optionId => {\n    if (selectedAnswers[questionId]) return;\n    setSelectedAnswers({\n      [questionId]: optionId\n    });\n    checkAnswer({\n      userAnswerId: optionId\n    });\n  };\n  const handleCheckboxes = optionId => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: newSelection\n    });\n  };\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({\n        userSelectedIds: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: current.filter(id => id !== itemId)\n      });\n    } else {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: [...current, itemId]\n      });\n    }\n  };\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({\n        userOrder: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleRange = value => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: value\n    });\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({\n        userValue: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleLocation = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        x,\n        y\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleMapClick = (lat, lng) => {\n    if (!question) {\n      console.error('Question not loaded yet');\n      return;\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        lat,\n        lng\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        lat,\n        lng\n      }\n    });\n  };\n  const initializeMap = mapConfig => {\n    if (!mapConfig || !questionId) {\n      console.error('Cannot initialize map: missing config or questionId');\n      return;\n    }\n\n    // This will be implemented with Leaflet\n    // For now, we'll create a simple clickable div that simulates map coordinates\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && mapConfig) {\n      // Create a simple coordinate system for demonstration\n      mapElement.innerHTML = `\n        <div class=\"map-placeholder\" style=\"\n          width: 100%; \n          height: 100%; \n          background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n          background-size: 40px 40px;\n          position: relative;\n          cursor: crosshair;\n          border-radius: 8px;\n          border: 2px solid #333;\n        \">\n          <div style=\"\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: #333;\n            font-weight: bold;\n          \">\n            <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n            <div>Click anywhere on this map</div>\n            <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n              Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n            </div>\n            <div style=\"\n              font-size: 0.7rem; \n              margin-top: 0.5rem; \n              color: #28a745; \n              background: #e8f5e8; \n              padding: 0.25rem 0.5rem; \n              border-radius: 4px;\n            \">\n              ‚úì Ready to use\n            </div>\n          </div>\n          ${mapConfig.landmarks.map(landmark => `\n            <div style=\"\n              position: absolute;\n              left: ${(landmark.lng - (mapConfig.center.lng - 0.1)) / 0.2 * 100}%;\n              top: ${(landmark.lat - (mapConfig.center.lat - 0.1)) / 0.2 * 100}%;\n              transform: translate(-50%, -50%);\n              background: white;\n              border: 2px solid #333;\n              border-radius: 50%;\n              width: 30px;\n              height: 30px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              font-size: 1.2rem;\n              cursor: pointer;\n              box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            \" title=\"${landmark.name}\">\n              ${landmark.icon}\n            </div>\n          `).join('')}\n        </div>\n      `;\n\n      // Add click handler\n      mapElement.querySelector('.map-placeholder').addEventListener('click', e => {\n        if (loading || !question) {\n          console.log('Map interaction disabled while loading');\n          return;\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n\n        // Convert to approximate lat/lng coordinates\n        const lng = mapConfig.center.lng - 0.1 + x / rect.width * 0.2;\n        const lat = mapConfig.center.lat - 0.1 + y / rect.height * 0.2;\n        handleMapClick(lat, lng);\n      });\n    }\n  };\n  const checkAnswer = answerData => {\n    if (!question) {\n      console.error('Cannot check answer: question not loaded');\n      return;\n    }\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log('Answer check result:', data);\n      setResult(data);\n      if (data.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n      }\n    }).catch(err => console.error('Failed to check answer:', err));\n  };\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 12\n    }, this);\n  }\n  const renderQuestionContent = () => {\n    var _selectedAnswers$ques;\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-area\",\n          children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMultipleChoice(option.optionId),\n            className: `option-button ${getButtonClassName(option.optionId)}`,\n            disabled: !!selectedAnswers[questionId],\n            children: option.text\n          }, option.optionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this);\n      case 'checkboxes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkboxes-area\",\n          children: [question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (selectedAnswers[questionId] || []).includes(option.optionId),\n              onChange: () => handleCheckboxes(option.optionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, option.optionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckboxesSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length === 0,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this);\n      case 'reorder':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click items in the order you want them:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-order\",\n              children: (_selectedAnswers$ques = selectedAnswers[questionId]) === null || _selectedAnswers$ques === void 0 ? void 0 : _selectedAnswers$ques.map((itemId, index) => {\n                const item = question.items.find(i => i.itemId === itemId);\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"order-item\",\n                  children: [index + 1, \". \", item.text]\n                }, itemId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-items\",\n            children: question.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReorder(item.itemId),\n              className: `reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`,\n              children: item.text\n            }, item.itemId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReorderSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length,\n            children: \"Submit Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this);\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.minValue,\n              max: question.maxValue,\n              value: selectedAnswers[questionId] || question.minValue,\n              onChange: e => handleRange(parseInt(e.target.value)),\n              className: \"range-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"range-value\",\n              children: [\"Selected: \", selectedAnswers[questionId] || question.minValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRangeSubmit,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this);\n      case 'location':\n      case 'pinpoint':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.questionType === 'location' ? question.mapInstructions : question.pinpointInstructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: question.imageId,\n              alt: \"Quiz context\",\n              className: \"quiz-image clickable\",\n              onClick: handleLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), selectedAnswers[questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-marker\",\n              style: {\n                left: `${selectedAnswers[questionId].x * 100}%`,\n                top: `${selectedAnswers[questionId].y * 100}%`\n              },\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-feedback\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the image above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this);\n      case 'real-world-map':\n        if (loading || !question.mapConfig) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"real-world-map-area\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: \"Loading map...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"real-world-map-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click on the map to mark your answer. Use the map controls to zoom and pan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `map-${questionId}`,\n              className: `real-map ${loading ? 'loading' : ''}`,\n              style: {\n                height: '400px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-landmarks\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Landmarks on this map:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"landmarks-list\",\n              children: question.mapConfig.landmarks.map((landmark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"landmark-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-icon\",\n                  children: landmark.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-name\",\n                  children: landmark.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-feedback\",\n            children: selectedAnswers[questionId] ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You clicked at: \", selectedAnswers[questionId].lat.toFixed(4), \", \", selectedAnswers[questionId].lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the map above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this);\n      case 'type-answer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-answer-area\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTypeAnswer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answer\",\n              placeholder: \"Type your answer here...\",\n              className: \"answer-input\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getButtonClassName = optionId => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    return 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [question.imageId && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.imageId,\n        alt: \"Quiz context\",\n        className: \"quiz-image\",\n        onError: e => {\n          console.error('Failed to load image:', question.imageId);\n          e.target.style.display = 'none';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), renderQuestionContent(), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${result.result}`,\n      children: [result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!', result.result === 'incorrect' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-details\",\n        children: [result.correctOptionId && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : (_question$options$fin = _question$options.find(opt => opt.optionId === result.correctOptionId)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 42\n        }, this), result.correctOptionIds && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answers: \", result.correctOptionIds.map(id => {\n            var _question$options2, _question$options2$fi;\n            return (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : (_question$options2$fi = _question$options2.find(opt => opt.optionId === id)) === null || _question$options2$fi === void 0 ? void 0 : _question$options2$fi.text;\n          }).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 43\n        }, this), result.correctOrder && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct order: \", result.correctOrder.join(' ‚Üí ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 39\n        }, this), result.correctAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", result.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 40\n        }, this), result.correctAnswers && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Possible answers: \", result.correctAnswers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetQuiz,\n      className: \"reset-button\",\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedQuiz, \"ZLJSS0Mh6qjVxsipzHPNKj9fSiM=\");\n_c = AdvancedQuiz;\nexport default AdvancedQuiz;\nvar _c;\n$RefreshReg$(_c, \"AdvancedQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","AdvancedQuiz","questionId","onBack","_s","_question$options","_question$options$fin","question","setQuestion","selectedAnswers","setSelectedAnswers","result","setResult","score","setScore","loading","setLoading","fetch","then","res","json","data","console","log","questionType","mapConfig","setTimeout","initializeMap","catch","err","error","handleMultipleChoice","optionId","checkAnswer","userAnswerId","handleCheckboxes","current","newSelection","includes","filter","id","handleCheckboxesSubmit","length","userSelectedIds","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","value","handleRangeSubmit","undefined","userValue","handleLocation","event","rect","target","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","userLocation","handleTypeAnswer","preventDefault","input","answer","trim","userAnswer","handleMapClick","lat","lng","mapElement","document","getElementById","innerHTML","center","toFixed","landmarks","map","landmark","name","icon","join","querySelector","addEventListener","e","currentTarget","answerData","method","headers","body","JSON","stringify","prevScore","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderQuestionContent","_selectedAnswers$ques","options","option","onClick","getButtonClassName","disabled","text","type","checked","onChange","index","item","find","i","min","minValue","max","maxValue","parseInt","mapInstructions","pinpointInstructions","src","imageId","alt","style","onSubmit","placeholder","autoComplete","correctOptionId","onError","display","questionText","opt","correctOptionIds","_question$options2","_question$options2$fi","correctOrder","correctAnswer","correctAnswers","_c","$RefreshReg$"],"sources":["/Users/raghavpant/üíª/quiz/quiz-frontend/src/AdvancedQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst API_URL = \"http://localhost:5001\";\n\nfunction AdvancedQuiz({ questionId, onBack }) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Quiz data received:', data);\n        setQuestion(data);\n        setLoading(false);\n        \n        // Initialize map if it's a real-world map question\n        if (data.questionType === 'real-world-map' && data.mapConfig) {\n          // Use setTimeout to ensure DOM is ready\n          setTimeout(() => {\n            if (data.mapConfig) {\n              initializeMap(data.mapConfig);\n            }\n          }, 100);\n        }\n      })\n      .catch((err) => console.error('Failed to fetch quiz data:', err));\n  }, [questionId]);\n\n  const handleMultipleChoice = (optionId) => {\n    if (selectedAnswers[questionId]) return;\n    \n    setSelectedAnswers({ [questionId]: optionId });\n    checkAnswer({ userAnswerId: optionId });\n  };\n\n  const handleCheckboxes = (optionId) => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    \n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: newSelection });\n  };\n\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({ userSelectedIds: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: current.filter(id => id !== itemId) });\n    } else {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: [...current, itemId] });\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({ userOrder: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleRange = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: value });\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({ userValue: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleLocation = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { x, y } });\n    checkAnswer({ userLocation: { x, y } });\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleMapClick = (lat, lng) => {\n    if (!question) {\n      console.error('Question not loaded yet');\n      return;\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { lat, lng } });\n    checkAnswer({ userLocation: { lat, lng } });\n  };\n\n  const initializeMap = (mapConfig) => {\n    if (!mapConfig || !questionId) {\n      console.error('Cannot initialize map: missing config or questionId');\n      return;\n    }\n    \n    // This will be implemented with Leaflet\n    // For now, we'll create a simple clickable div that simulates map coordinates\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && mapConfig) {\n      // Create a simple coordinate system for demonstration\n      mapElement.innerHTML = `\n        <div class=\"map-placeholder\" style=\"\n          width: 100%; \n          height: 100%; \n          background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n          background-size: 40px 40px;\n          position: relative;\n          cursor: crosshair;\n          border-radius: 8px;\n          border: 2px solid #333;\n        \">\n          <div style=\"\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            text-align: center;\n            color: #333;\n            font-weight: bold;\n          \">\n            <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n            <div>Click anywhere on this map</div>\n            <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n              Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n            </div>\n            <div style=\"\n              font-size: 0.7rem; \n              margin-top: 0.5rem; \n              color: #28a745; \n              background: #e8f5e8; \n              padding: 0.25rem 0.5rem; \n              border-radius: 4px;\n            \">\n              ‚úì Ready to use\n            </div>\n          </div>\n          ${mapConfig.landmarks.map(landmark => `\n            <div style=\"\n              position: absolute;\n              left: ${((landmark.lng - (mapConfig.center.lng - 0.1)) / 0.2) * 100}%;\n              top: ${((landmark.lat - (mapConfig.center.lat - 0.1)) / 0.2) * 100}%;\n              transform: translate(-50%, -50%);\n              background: white;\n              border: 2px solid #333;\n              border-radius: 50%;\n              width: 30px;\n              height: 30px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              font-size: 1.2rem;\n              cursor: pointer;\n              box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            \" title=\"${landmark.name}\">\n              ${landmark.icon}\n            </div>\n          `).join('')}\n        </div>\n      `;\n      \n      // Add click handler\n      mapElement.querySelector('.map-placeholder').addEventListener('click', (e) => {\n        if (loading || !question) {\n          console.log('Map interaction disabled while loading');\n          return;\n        }\n        \n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        \n        // Convert to approximate lat/lng coordinates\n        const lng = mapConfig.center.lng - 0.1 + (x / rect.width) * 0.2;\n        const lat = mapConfig.center.lat - 0.1 + (y / rect.height) * 0.2;\n        \n        handleMapClick(lat, lng);\n      });\n    }\n  };\n\n  const checkAnswer = (answerData) => {\n    if (!question) {\n      console.error('Cannot check answer: question not loaded');\n      return;\n    }\n    \n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Answer check result:', data);\n        setResult(data);\n        if (data.result === 'correct') {\n          setScore(prevScore => prevScore + 1);\n        }\n      })\n      .catch((err) => console.error('Failed to check answer:', err));\n  };\n\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading quiz...</div>;\n  }\n\n  if (!question) {\n    return <div>Question not found</div>;\n  }\n\n  const renderQuestionContent = () => {\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return (\n          <div className=\"options-area\">\n            {question.options.map((option) => (\n              <button\n                key={option.optionId}\n                onClick={() => handleMultipleChoice(option.optionId)}\n                className={`option-button ${getButtonClassName(option.optionId)}`}\n                disabled={!!selectedAnswers[questionId]}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div className=\"checkboxes-area\">\n            {question.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswers[questionId] || []).includes(option.optionId)}\n                  onChange={() => handleCheckboxes(option.optionId)}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n            <button \n              onClick={handleCheckboxesSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length === 0}\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'reorder':\n        return (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswers[questionId]?.map((itemId, index) => {\n                  const item = question.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {question.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            <button \n              onClick={handleReorderSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length}\n            >\n              Submit Order\n            </button>\n          </div>\n        );\n\n      case 'range':\n        return (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={question.minValue}\n                max={question.maxValue}\n                value={selectedAnswers[questionId] || question.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswers[questionId] || question.minValue}\n              </div>\n            </div>\n            <button \n              onClick={handleRangeSubmit}\n              className=\"submit-button\"\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'location':\n      case 'pinpoint':\n        return (\n          <div className=\"location-area\">\n            <div className=\"location-instructions\">\n              <p>{question.questionType === 'location' ? question.mapInstructions : question.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={question.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n              />\n              {selectedAnswers[questionId] && (\n                <div \n                  className=\"location-marker\"\n                  style={{\n                    left: `${selectedAnswers[questionId].x * 100}%`,\n                    top: `${selectedAnswers[questionId].y * 100}%`\n                  }}\n                >\n                  üìç\n                </div>\n              )}\n            </div>\n            <div className=\"location-feedback\">\n              <p>Click anywhere on the image above to mark your answer</p>\n            </div>\n          </div>\n        );\n\n      case 'real-world-map':\n        if (loading || !question.mapConfig) {\n          return (\n            <div className=\"real-world-map-area\">\n              <div className=\"loading\">Loading map...</div>\n            </div>\n          );\n        }\n        \n        return (\n          <div className=\"real-world-map-area\">\n            <div className=\"map-instructions\">\n              <p>Click on the map to mark your answer. Use the map controls to zoom and pan.</p>\n            </div>\n            <div className=\"map-container\">\n              <div \n                id={`map-${questionId}`} \n                className={`real-map ${loading ? 'loading' : ''}`}\n                style={{ height: '400px', width: '100%' }}\n              >\n                {/* Map will be rendered here by Leaflet */}\n              </div>\n            </div>\n            <div className=\"map-landmarks\">\n              <h4>Landmarks on this map:</h4>\n              <div className=\"landmarks-list\">\n                {question.mapConfig.landmarks.map((landmark, index) => (\n                  <div key={index} className=\"landmark-item\">\n                    <span className=\"landmark-icon\">{landmark.icon}</span>\n                    <span className=\"landmark-name\">{landmark.name}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"map-feedback\">\n              {selectedAnswers[questionId] ? (\n                <p>You clicked at: {selectedAnswers[questionId].lat.toFixed(4)}, {selectedAnswers[questionId].lng.toFixed(4)}</p>\n              ) : (\n                <p>Click anywhere on the map above to mark your answer</p>\n              )}\n            </div>\n          </div>\n        );\n\n      case 'type-answer':\n        return (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n              />\n              <button type=\"submit\" className=\"submit-button\">\n                Submit\n              </button>\n            </form>\n          </div>\n        );\n\n      default:\n        return <div>Unsupported question type</div>;\n    }\n  };\n\n  const getButtonClassName = (optionId) => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    \n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    \n    return 'disabled';\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-button\">‚Üê Back</button>\n        <h1>Quiz</h1>\n        <p className=\"score\">Score: {score}</p>\n      </div>\n\n      <div className=\"question-area\">\n        {question.imageId && (\n          <img \n            src={question.imageId} \n            alt=\"Quiz context\" \n            className=\"quiz-image\" \n            onError={(e) => {\n              console.error('Failed to load image:', question.imageId);\n              e.target.style.display = 'none';\n            }}\n          />\n        )}\n        <h2>{question.questionText}</h2>\n      </div>\n\n      {renderQuestionContent()}\n      \n      {result && (\n        <div className={`result-message ${result.result}`}>\n          {result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!'}\n          {result.result === 'incorrect' && (\n            <div className=\"feedback-details\">\n              {result.correctOptionId && <p>Correct answer: {question.options?.find(opt => opt.optionId === result.correctOptionId)?.text}</p>}\n              {result.correctOptionIds && <p>Correct answers: {result.correctOptionIds.map(id => question.options?.find(opt => opt.optionId === id)?.text).join(', ')}</p>}\n              {result.correctOrder && <p>Correct order: {result.correctOrder.join(' ‚Üí ')}</p>}\n              {result.correctAnswer && <p>Correct answer: {result.correctAnswer}</p>}\n              {result.correctAnswers && <p>Possible answers: {result.correctAnswers.join(', ')}</p>}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {result && (\n        <button onClick={resetQuiz} className=\"reset-button\">\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default AdvancedQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}