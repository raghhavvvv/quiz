{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/CarLogoQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CarLogoQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    document.body.appendChild(confetti);\n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\nfunction CarLogoQuiz({\n  onBack\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n  const carQuestionIds = ['car1', 'car2', 'car3', 'car4', 'car5', 'car6', 'car7', 'car8', 'car9', 'car10'];\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, []);\n  const loadQuestions = async () => {\n    try {\n      console.log('Loading car questions...');\n      const questionPromises = carQuestionIds.map(id => fetch(`${API_URL}/api/quiz/${id}`).then(res => {\n        console.log(`Response for ${id}:`, res.status);\n        return res.json();\n      }));\n      const loadedQuestions = await Promise.all(questionPromises);\n      console.log('Loaded questions:', loadedQuestions);\n      setQuestions(loadedQuestions);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = optionId => {\n    if (isAnswered) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    if (isAnswered) return;\n    const current = selectedAnswer || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswer(current.filter(id => id !== itemId));\n    } else {\n      setSelectedAnswer([...current, itemId]);\n    }\n  };\n  const handleReorderSubmit = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedAnswer && selectedAnswer.length === currentQuestion.items.length) {\n      submitAnswer({\n        userOrder: selectedAnswer\n      });\n    }\n  };\n  const handleRange = value => {\n    if (isAnswered) return;\n    setSelectedAnswer(value);\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswer !== undefined && selectedAnswer !== null) {\n      submitAnswer({\n        userValue: selectedAnswer\n      });\n    }\n  };\n  const handleLocation = event => {\n    if (isAnswered) return;\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswer({\n      x,\n      y\n    });\n    submitAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({\n        userAnswerId: selectedAnswer\n      });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({\n        userSelectedIds: selectedAnswer\n      });\n    }\n  };\n  const submitAnswer = async answerData => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n      const result = await response.json();\n      if (result.result === 'correct') {\n        setScore(score + 1);\n        setFeedback({\n          type: 'correct',\n          message: 'Correct!'\n        });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({\n          type: 'incorrect',\n          message: 'Incorrect!'\n        });\n      }\n      setTimeout(() => {\n        if (currentQuestionIndex < questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setSelectedAnswer(null);\n          setIsAnswered(false);\n          setFeedback(null);\n        } else {\n          setShowResult(true);\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"Loading car logo quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"No questions available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 12\n    }, this);\n  }\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-result\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE97 Car Logo Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total\",\n            children: [\"/ \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-message\",\n          children: score >= 8 ? \"Excellent! You're a car logo expert!\" : score >= 6 ? \"Good job! You know your car brands well.\" : score >= 4 ? \"Not bad! Keep learning about car logos.\" : \"Keep practicing! There's room for improvement.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetQuiz,\n            className: \"retry-button\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onBack,\n            className: \"back-button\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  if (!currentQuestion || !currentQuestion.options) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-logo-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-btn\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentQuestion.imageId,\n          alt: \"Car logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), currentQuestion.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedAnswer === option.optionId ? 'selected' : ''} ${isAnswered ? 'disabled' : ''}`,\n          onClick: () => handleAnswerSelect(option.optionId),\n          disabled: isAnswered,\n          children: option.text\n        }, option.optionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'checkboxes' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxes-area\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (selectedAnswer || []).includes(option.optionId),\n            onChange: () => handleAnswerSelect(option.optionId),\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, option.optionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'type-answer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-answer-area\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTypeAnswer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answer\",\n            placeholder: \"Type your answer here...\",\n            className: \"answer-input\",\n            autoComplete: \"off\",\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'reorder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reorder-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click items in the order you want them:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-order\",\n            children: selectedAnswer === null || selectedAnswer === void 0 ? void 0 : selectedAnswer.map((itemId, index) => {\n              const item = currentQuestion.items.find(i => i.itemId === itemId);\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"order-item\",\n                children: [index + 1, \". \", item === null || item === void 0 ? void 0 : item.text]\n              }, itemId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-items\",\n          children: currentQuestion.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReorder(item.itemId),\n            className: `reorder-item ${(selectedAnswer || []).includes(item.itemId) ? 'selected' : ''}`,\n            disabled: isAnswered,\n            children: item.text\n          }, item.itemId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReorderSubmit,\n          className: \"submit-button\",\n          disabled: !selectedAnswer || selectedAnswer.length !== currentQuestion.items.length,\n          children: \"Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'range' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: currentQuestion.minValue,\n            max: currentQuestion.maxValue,\n            value: selectedAnswer || currentQuestion.minValue,\n            onChange: e => handleRange(parseInt(e.target.value)),\n            className: \"range-input\",\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-value\",\n            children: [\"Selected: \", selectedAnswer || currentQuestion.minValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRangeSubmit,\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'pinpoint' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinpoint-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-instructions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentQuestion.pinpointInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentQuestion.imageId,\n            alt: \"Quiz context\",\n            className: \"quiz-image clickable\",\n            onClick: handleLocation,\n            style: {\n              cursor: isAnswered ? 'default' : 'crosshair'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), selectedAnswer && selectedAnswer.x !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pinpoint-marker\",\n            style: {\n              left: `${selectedAnswer.x * 100}%`,\n              top: `${selectedAnswer.y * 100}%`\n            },\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-feedback\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click anywhere on the image above to mark your answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${feedback.type}`,\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), (currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmitAnswer,\n        disabled: !selectedAnswer || currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0 || isAnswered,\n        children: isAnswered ? 'Next Question...' : 'Submit Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(CarLogoQuiz, \"Q9MJ+T00Bf0DE0yenNUxp5+zLsA=\");\n_c = CarLogoQuiz;\nexport default CarLogoQuiz;\nvar _c;\n$RefreshReg$(_c, \"CarLogoQuiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","createConfetti","colors","confettiCount","i","confetti","document","createElement","style","position","left","Math","random","top","width","height","backgroundColor","floor","length","borderRadius","pointerEvents","zIndex","animation","body","appendChild","setTimeout","remove","addConfettiStyles","getElementById","id","textContent","head","CarLogoQuiz","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","isAnswered","setIsAnswered","loading","setLoading","feedback","setFeedback","carQuestionIds","loadQuestions","console","log","questionPromises","map","fetch","then","res","status","json","loadedQuestions","Promise","all","error","handleAnswerSelect","optionId","currentQuestion","questionType","current","newSelection","includes","filter","handleTypeAnswer","event","preventDefault","input","target","answer","value","trim","submitAnswer","userAnswer","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","handleRangeSubmit","undefined","userValue","handleLocation","rect","getBoundingClientRect","x","clientX","y","clientY","userLocation","handleSubmitAnswer","userAnswerId","userSelectedIds","answerData","response","method","headers","JSON","stringify","questionId","result","type","message","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","src","imageId","alt","questionText","option","disabled","text","checked","onChange","onSubmit","name","placeholder","autoComplete","index","item","find","min","minValue","max","maxValue","e","parseInt","pinpointInstructions","cursor","_c","$RefreshReg$"],"sources":["/Users/raghavpant/💻/quiz/quiz-frontend/src/CarLogoQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CarLogoQuiz.css';\n\nconst API_URL = \"http://localhost:5001\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    \n    document.body.appendChild(confetti);\n    \n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\nfunction CarLogoQuiz({ onBack }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n\n  const carQuestionIds = ['car1', 'car2', 'car3', 'car4', 'car5', 'car6', 'car7', 'car8', 'car9', 'car10'];\n\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, []);\n\n  const loadQuestions = async () => {\n    try {\n      console.log('Loading car questions...');\n      const questionPromises = carQuestionIds.map(id => \n        fetch(`${API_URL}/api/quiz/${id}`)\n          .then(res => {\n            console.log(`Response for ${id}:`, res.status);\n            return res.json();\n          })\n      );\n      const loadedQuestions = await Promise.all(questionPromises);\n      console.log('Loaded questions:', loadedQuestions);\n      setQuestions(loadedQuestions);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = (optionId) => {\n    if (isAnswered) return;\n    \n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      \n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      \n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    if (isAnswered) return;\n    const current = selectedAnswer || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswer(current.filter(id => id !== itemId));\n    } else {\n      setSelectedAnswer([...current, itemId]);\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedAnswer && selectedAnswer.length === currentQuestion.items.length) {\n      submitAnswer({ userOrder: selectedAnswer });\n    }\n  };\n\n  const handleRange = (value) => {\n    if (isAnswered) return;\n    setSelectedAnswer(value);\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswer !== undefined && selectedAnswer !== null) {\n      submitAnswer({ userValue: selectedAnswer });\n    }\n  };\n\n  const handleLocation = (event) => {\n    if (isAnswered) return;\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswer({ x, y });\n    submitAnswer({ userLocation: { x, y } });\n  };\n\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    \n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({ userAnswerId: selectedAnswer });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({ userSelectedIds: selectedAnswer });\n    }\n  };\n\n  const submitAnswer = async (answerData) => {\n    if (isAnswered) return;\n\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n\n      const result = await response.json();\n      \n      if (result.result === 'correct') {\n        setScore(score + 1);\n        setFeedback({ type: 'correct', message: 'Correct!' });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({ type: 'incorrect', message: 'Incorrect!' });\n      }\n\n      setTimeout(() => {\n        if (currentQuestionIndex < questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setSelectedAnswer(null);\n          setIsAnswered(false);\n          setFeedback(null);\n        } else {\n          setShowResult(true);\n        }\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n\n  if (loading) {\n    return <div className=\"car-quiz-loading\">Loading car logo quiz...</div>;\n  }\n\n  if (questions.length === 0) {\n    return <div className=\"car-quiz-loading\">No questions available. Please try again later.</div>;\n  }\n\n  if (showResult) {\n    return (\n      <div className=\"car-quiz-result\">\n        <div className=\"result-content\">\n          <h1>🚗 Car Logo Quiz Complete!</h1>\n          <div className=\"score-display\">\n            <span className=\"score\">{score}</span>\n            <span className=\"total\">/ {questions.length}</span>\n          </div>\n          <p className=\"score-message\">\n            {score >= 8 ? \"Excellent! You're a car logo expert!\" :\n             score >= 6 ? \"Good job! You know your car brands well.\" :\n             score >= 4 ? \"Not bad! Keep learning about car logos.\" :\n             \"Keep practicing! There's room for improvement.\"}\n          </p>\n          <div className=\"result-actions\">\n            <button onClick={resetQuiz} className=\"retry-button\">Try Again</button>\n            <button onClick={onBack} className=\"back-button\">Back to Home</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  if (!currentQuestion || !currentQuestion.options) {\n    return <div className=\"car-quiz-loading\">Loading question...</div>;\n  }\n\n  return (\n    <div className=\"car-logo-quiz\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-btn\">← Back</button>\n        <div className=\"progress\">\n          <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"score-display\">Score: {score}</div>\n      </div>\n\n      <div className=\"question-container\">\n        <div className=\"question-image\">\n          <img src={currentQuestion.imageId} alt=\"Car logo\" />\n        </div>\n        \n        <h2 className=\"question-text\">{currentQuestion.questionText}</h2>\n        \n        {currentQuestion.questionType === 'multiple-choice' && (\n          <div className=\"options-grid\">\n            {currentQuestion.options.map((option) => (\n              <button\n                key={option.optionId}\n                className={`option-button ${\n                  selectedAnswer === option.optionId ? 'selected' : ''\n                } ${isAnswered ? 'disabled' : ''}`}\n                onClick={() => handleAnswerSelect(option.optionId)}\n                disabled={isAnswered}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'checkboxes' && (\n          <div className=\"checkboxes-area\">\n            {currentQuestion.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswer || []).includes(option.optionId)}\n                  onChange={() => handleAnswerSelect(option.optionId)}\n                  disabled={isAnswered}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'type-answer' && (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n                disabled={isAnswered}\n              />\n              {!isAnswered && (\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit Answer\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'reorder' && (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswer?.map((itemId, index) => {\n                  const item = currentQuestion.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item?.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {currentQuestion.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswer || []).includes(item.itemId) ? 'selected' : ''}`}\n                  disabled={isAnswered}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            {!isAnswered && (\n              <button \n                onClick={handleReorderSubmit}\n                className=\"submit-button\"\n                disabled={!selectedAnswer || selectedAnswer.length !== currentQuestion.items.length}\n              >\n                Submit Order\n              </button>\n            )}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'range' && (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={currentQuestion.minValue}\n                max={currentQuestion.maxValue}\n                value={selectedAnswer || currentQuestion.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n                disabled={isAnswered}\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswer || currentQuestion.minValue}\n              </div>\n            </div>\n            {!isAnswered && (\n              <button \n                onClick={handleRangeSubmit}\n                className=\"submit-button\"\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'pinpoint' && (\n          <div className=\"pinpoint-area\">\n            <div className=\"pinpoint-instructions\">\n              <p>{currentQuestion.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={currentQuestion.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n                style={{ cursor: isAnswered ? 'default' : 'crosshair' }}\n              />\n              {selectedAnswer && selectedAnswer.x !== undefined && (\n                <div \n                  className=\"pinpoint-marker\"\n                  style={{\n                    left: `${selectedAnswer.x * 100}%`,\n                    top: `${selectedAnswer.y * 100}%`\n                  }}\n                >\n                  🎯\n                </div>\n              )}\n            </div>\n            <div className=\"pinpoint-feedback\">\n              <p>Click anywhere on the image above to mark your answer</p>\n            </div>\n          </div>\n        )}\n\n        {feedback && (\n          <div className={`feedback ${feedback.type}`}>\n            {feedback.message}\n          </div>\n        )}\n\n        {(currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && (\n          <button\n            className=\"submit-button\"\n            onClick={handleSubmitAnswer}\n            disabled={\n              !selectedAnswer || \n              (currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0) || \n              isAnswered\n            }\n          >\n            {isAnswered ? 'Next Question...' : 'Submit Answer'}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CarLogoQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}