{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/AdvancedQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './AdvancedQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\";\nfunction AdvancedQuiz({\n  questionId,\n  onBack\n}) {\n  _s();\n  var _question$options, _question$options$fin;\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`).then(res => res.json()).then(data => {\n      console.log('Quiz data received:', data);\n      setQuestion(data);\n      setLoading(false);\n\n      // Initialize map if it's a real-world map question\n      if (data.questionType === 'real-world-map' && data.mapConfig) {\n        // Use setTimeout to ensure DOM is ready\n        setTimeout(() => {\n          if (data.mapConfig) {\n            initializeMap(data.mapConfig);\n          }\n        }, 100);\n      }\n    }).catch(err => console.error('Failed to fetch quiz data:', err));\n\n    // Cleanup function to remove map when component unmounts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [questionId]);\n  const handleMultipleChoice = optionId => {\n    if (selectedAnswers[questionId]) return;\n    setSelectedAnswers({\n      [questionId]: optionId\n    });\n    checkAnswer({\n      userAnswerId: optionId\n    });\n  };\n  const handleCheckboxes = optionId => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: newSelection\n    });\n  };\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({\n        userSelectedIds: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: current.filter(id => id !== itemId)\n      });\n    } else {\n      setSelectedAnswers({\n        ...selectedAnswers,\n        [questionId]: [...current, itemId]\n      });\n    }\n  };\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({\n        userOrder: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleRange = value => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: value\n    });\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({\n        userValue: selectedAnswers[questionId]\n      });\n    }\n  };\n  const handleLocation = event => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        x,\n        y\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleMapClick = (lat, lng) => {\n    if (!question) {\n      console.error('Question not loaded yet');\n      return;\n    }\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionId]: {\n        lat,\n        lng\n      }\n    });\n    checkAnswer({\n      userLocation: {\n        lat,\n        lng\n      }\n    });\n  };\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const initializeMap = mapConfig => {\n    if (!mapConfig || !questionId) {\n      console.error('Cannot initialize map: missing config or questionId');\n      return;\n    }\n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && !mapInstanceRef.current) {\n      try {\n        // Initialize Leaflet map\n        const map = L.map(`map-${questionId}`, {\n          center: [mapConfig.center.lat, mapConfig.center.lng],\n          zoom: mapConfig.zoom || 10,\n          zoomControl: true,\n          attributionControl: true\n        });\n\n        // Add OpenStreetMap tiles\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '¬© OpenStreetMap contributors',\n          maxZoom: 18\n        }).addTo(map);\n\n        // Add landmarks as markers\n        mapConfig.landmarks.forEach(landmark => {\n          const marker = L.marker([landmark.lat, landmark.lng], {\n            title: landmark.name\n          }).addTo(map);\n\n          // Add popup with landmark info\n          marker.bindPopup(`\n            <div style=\"text-align: center;\">\n              <div style=\"font-size: 1.5rem; margin-bottom: 0.5rem;\">${landmark.icon}</div>\n              <strong>${landmark.name}</strong>\n            </div>\n          `);\n        });\n\n        // Add click handler for the map\n        map.on('click', e => {\n          if (loading || !question) {\n            console.log('Map interaction disabled while loading');\n            return;\n          }\n          const {\n            lat,\n            lng\n          } = e.latlng;\n          handleMapClick(lat, lng);\n\n          // Add a temporary marker to show where user clicked\n          const userMarker = L.marker([lat, lng], {\n            icon: L.divIcon({\n              className: 'user-marker',\n              html: 'üìç',\n              iconSize: [30, 30],\n              iconAnchor: [15, 30]\n            })\n          }).addTo(map);\n\n          // Remove the marker after 3 seconds\n          setTimeout(() => {\n            map.removeLayer(userMarker);\n          }, 3000);\n        });\n\n        // Store map instance\n        mapInstanceRef.current = map;\n        console.log('Leaflet map initialized successfully');\n      } catch (error) {\n        console.error('Failed to initialize Leaflet map:', error);\n        // Fallback to placeholder if Leaflet fails\n        createPlaceholderMap(mapElement, mapConfig);\n      }\n    }\n  };\n  const createPlaceholderMap = (mapElement, mapConfig) => {\n    // Fallback placeholder map if Leaflet fails\n    mapElement.innerHTML = `\n      <div class=\"map-placeholder\" style=\"\n        width: 100%; \n        height: 100%; \n        background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n        background-size: 40px 40px;\n        position: relative;\n        cursor: crosshair;\n        border-radius: 8px;\n        border: 2px solid #333;\n      \">\n        <div style=\"\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          text-align: center;\n          color: #333;\n          font-weight: bold;\n        \">\n          <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n          <div>Map loading failed - using placeholder</div>\n          <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n            Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n          </div>\n        </div>\n      </div>\n    `;\n  };\n  const checkAnswer = answerData => {\n    if (!question) {\n      console.error('Cannot check answer: question not loaded');\n      return;\n    }\n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData\n      })\n    }).then(res => res.json()).then(data => {\n      console.log('Answer check result:', data);\n      setResult(data);\n      if (data.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n      }\n    }).catch(err => console.error('Failed to check answer:', err));\n  };\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Question not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 12\n    }, this);\n  }\n  const renderQuestionContent = () => {\n    var _selectedAnswers$ques;\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-area\",\n          children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMultipleChoice(option.optionId),\n            className: `option-button ${getButtonClassName(option.optionId)}`,\n            disabled: !!selectedAnswers[questionId],\n            children: option.text\n          }, option.optionId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this);\n      case 'checkboxes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkboxes-area\",\n          children: [question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (selectedAnswers[questionId] || []).includes(option.optionId),\n              onChange: () => handleCheckboxes(option.optionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, option.optionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckboxesSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length === 0,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this);\n      case 'reorder':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click items in the order you want them:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-order\",\n              children: (_selectedAnswers$ques = selectedAnswers[questionId]) === null || _selectedAnswers$ques === void 0 ? void 0 : _selectedAnswers$ques.map((itemId, index) => {\n                const item = question.items.find(i => i.itemId === itemId);\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"order-item\",\n                  children: [index + 1, \". \", item.text]\n                }, itemId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reorder-items\",\n            children: question.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReorder(item.itemId),\n              className: `reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`,\n              children: item.text\n            }, item.itemId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReorderSubmit,\n            className: \"submit-button\",\n            disabled: !selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length,\n            children: \"Submit Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this);\n      case 'range':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: question.minValue,\n              max: question.maxValue,\n              value: selectedAnswers[questionId] || question.minValue,\n              onChange: e => handleRange(parseInt(e.target.value)),\n              className: \"range-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"range-value\",\n              children: [\"Selected: \", selectedAnswers[questionId] || question.minValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRangeSubmit,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this);\n      case 'pinpoint':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pinpoint-instructions\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.pinpointInstructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: question.imageId,\n              alt: \"Quiz context\",\n              className: \"quiz-image clickable\",\n              onClick: handleLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), selectedAnswers[questionId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pinpoint-marker\",\n              style: {\n                left: `${selectedAnswers[questionId].x * 100}%`,\n                top: `${selectedAnswers[questionId].y * 100}%`\n              },\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pinpoint-feedback\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the image above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this);\n      case 'real-world-map':\n        if (loading || !question.mapConfig) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"real-world-map-area\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: \"Loading map...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"real-world-map-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click on the map to mark your answer. Use the map controls to zoom and pan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.9rem',\n                color: '#666',\n                marginTop: '0.5rem'\n              },\n              children: \"Loading real geographical map from OpenStreetMap...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `map-${questionId}`,\n              className: `real-map ${loading ? 'loading' : ''}`,\n              style: {\n                height: '400px',\n                width: '100%'\n              },\n              children: loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map-loading-overlay\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"map-loading-spinner\",\n                  children: \"\\uD83D\\uDDFA\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading real map...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-landmarks\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Landmarks on this map:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"landmarks-list\",\n              children: question.mapConfig.landmarks.map((landmark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"landmark-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-icon\",\n                  children: landmark.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"landmark-name\",\n                  children: landmark.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-feedback\",\n            children: selectedAnswers[questionId] ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You clicked at: \", selectedAnswers[questionId].lat.toFixed(4), \", \", selectedAnswers[questionId].lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Click anywhere on the map above to mark your answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this);\n      case 'type-answer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-answer-area\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTypeAnswer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"answer\",\n              placeholder: \"Type your answer here...\",\n              className: \"answer-input\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unsupported question type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getButtonClassName = optionId => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    return 'disabled';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-area\",\n      children: [question.imageId && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: question.imageId,\n        alt: \"Quiz context\",\n        className: \"quiz-image\",\n        onError: e => {\n          console.error('Failed to load image:', question.imageId);\n          e.target.style.display = 'none';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), renderQuestionContent(), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result-message ${result.result}`,\n      children: [result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!', result.result === 'incorrect' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-details\",\n        children: [result.correctOptionId && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", (_question$options = question.options) === null || _question$options === void 0 ? void 0 : (_question$options$fin = _question$options.find(opt => opt.optionId === result.correctOptionId)) === null || _question$options$fin === void 0 ? void 0 : _question$options$fin.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 42\n        }, this), result.correctOptionIds && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answers: \", result.correctOptionIds.map(id => {\n            var _question$options2, _question$options2$fi;\n            return (_question$options2 = question.options) === null || _question$options2 === void 0 ? void 0 : (_question$options2$fi = _question$options2.find(opt => opt.optionId === id)) === null || _question$options2$fi === void 0 ? void 0 : _question$options2$fi.text;\n          }).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 43\n        }, this), result.correctOrder && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct order: \", result.correctOrder.join(' ‚Üí ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 39\n        }, this), result.correctAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Correct answer: \", result.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 40\n        }, this), result.correctAnswers && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Possible answers: \", result.correctAnswers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetQuiz,\n      className: \"reset-button\",\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 5\n  }, this);\n}\n_s(AdvancedQuiz, \"TvhNGyS4nn7ci8HxmoE5T68owq0=\");\n_c = AdvancedQuiz;\nexport default AdvancedQuiz;\nvar _c;\n$RefreshReg$(_c, \"AdvancedQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","jsxDEV","_jsxDEV","API_URL","AdvancedQuiz","questionId","onBack","_s","_question$options","_question$options$fin","question","setQuestion","selectedAnswers","setSelectedAnswers","result","setResult","score","setScore","loading","setLoading","fetch","then","res","json","data","console","log","questionType","mapConfig","setTimeout","initializeMap","catch","err","error","mapInstanceRef","current","remove","handleMultipleChoice","optionId","checkAnswer","userAnswerId","handleCheckboxes","newSelection","includes","filter","id","handleCheckboxesSubmit","length","userSelectedIds","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","value","handleRangeSubmit","undefined","userValue","handleLocation","event","rect","target","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","userLocation","handleTypeAnswer","preventDefault","input","answer","trim","userAnswer","handleMapClick","lat","lng","mapRef","mapElement","document","getElementById","map","center","zoom","zoomControl","attributionControl","tileLayer","attribution","maxZoom","addTo","landmarks","forEach","landmark","marker","title","name","bindPopup","icon","on","e","latlng","userMarker","divIcon","className","html","iconSize","iconAnchor","removeLayer","createPlaceholderMap","innerHTML","toFixed","answerData","method","headers","body","JSON","stringify","prevScore","resetQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","renderQuestionContent","_selectedAnswers$ques","options","option","onClick","getButtonClassName","disabled","text","type","checked","onChange","index","item","find","i","min","minValue","max","maxValue","parseInt","pinpointInstructions","src","imageId","alt","style","fontSize","color","marginTop","onSubmit","placeholder","autoComplete","correctOptionId","onError","display","questionText","opt","correctOptionIds","_question$options2","_question$options2$fi","join","correctOrder","correctAnswer","correctAnswers","_c","$RefreshReg$"],"sources":["/Users/raghavpant/üíª/quiz/quiz-frontend/src/AdvancedQuiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './AdvancedQuiz.css';\n\nconst API_URL = \"http://localhost:5001\";\n\nfunction AdvancedQuiz({ questionId, onBack }) {\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${API_URL}/api/quiz/${questionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Quiz data received:', data);\n        setQuestion(data);\n        setLoading(false);\n        \n        // Initialize map if it's a real-world map question\n        if (data.questionType === 'real-world-map' && data.mapConfig) {\n          // Use setTimeout to ensure DOM is ready\n          setTimeout(() => {\n            if (data.mapConfig) {\n              initializeMap(data.mapConfig);\n            }\n          }, 100);\n        }\n      })\n      .catch((err) => console.error('Failed to fetch quiz data:', err));\n\n    // Cleanup function to remove map when component unmounts\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [questionId]);\n\n  const handleMultipleChoice = (optionId) => {\n    if (selectedAnswers[questionId]) return;\n    \n    setSelectedAnswers({ [questionId]: optionId });\n    checkAnswer({ userAnswerId: optionId });\n  };\n\n  const handleCheckboxes = (optionId) => {\n    const current = selectedAnswers[questionId] || [];\n    let newSelection;\n    \n    if (current.includes(optionId)) {\n      newSelection = current.filter(id => id !== optionId);\n    } else {\n      newSelection = [...current, optionId];\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: newSelection });\n  };\n\n  const handleCheckboxesSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length > 0) {\n      checkAnswer({ userSelectedIds: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    const current = selectedAnswers[questionId] || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: current.filter(id => id !== itemId) });\n    } else {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: [...current, itemId] });\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    if (selectedAnswers[questionId] && selectedAnswers[questionId].length === question.items.length) {\n      checkAnswer({ userOrder: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleRange = (value) => {\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: value });\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswers[questionId] !== undefined) {\n      checkAnswer({ userValue: selectedAnswers[questionId] });\n    }\n  };\n\n  const handleLocation = (event) => {\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { x, y } });\n    checkAnswer({ userLocation: { x, y } });\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      checkAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleMapClick = (lat, lng) => {\n    if (!question) {\n      console.error('Question not loaded yet');\n      return;\n    }\n    \n    setSelectedAnswers({ ...selectedAnswers, [questionId]: { lat, lng } });\n    checkAnswer({ userLocation: { lat, lng } });\n  };\n\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n\n  const initializeMap = (mapConfig) => {\n    if (!mapConfig || !questionId) {\n      console.error('Cannot initialize map: missing config or questionId');\n      return;\n    }\n    \n    const mapElement = document.getElementById(`map-${questionId}`);\n    if (mapElement && !mapInstanceRef.current) {\n      try {\n        // Initialize Leaflet map\n        const map = L.map(`map-${questionId}`, {\n          center: [mapConfig.center.lat, mapConfig.center.lng],\n          zoom: mapConfig.zoom || 10,\n          zoomControl: true,\n          attributionControl: true\n        });\n\n        // Add OpenStreetMap tiles\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '¬© OpenStreetMap contributors',\n          maxZoom: 18\n        }).addTo(map);\n\n        // Add landmarks as markers\n        mapConfig.landmarks.forEach(landmark => {\n          const marker = L.marker([landmark.lat, landmark.lng], {\n            title: landmark.name\n          }).addTo(map);\n          \n          // Add popup with landmark info\n          marker.bindPopup(`\n            <div style=\"text-align: center;\">\n              <div style=\"font-size: 1.5rem; margin-bottom: 0.5rem;\">${landmark.icon}</div>\n              <strong>${landmark.name}</strong>\n            </div>\n          `);\n        });\n\n        // Add click handler for the map\n        map.on('click', (e) => {\n          if (loading || !question) {\n            console.log('Map interaction disabled while loading');\n            return;\n          }\n          \n          const { lat, lng } = e.latlng;\n          handleMapClick(lat, lng);\n          \n          // Add a temporary marker to show where user clicked\n          const userMarker = L.marker([lat, lng], {\n            icon: L.divIcon({\n              className: 'user-marker',\n              html: 'üìç',\n              iconSize: [30, 30],\n              iconAnchor: [15, 30]\n            })\n          }).addTo(map);\n          \n          // Remove the marker after 3 seconds\n          setTimeout(() => {\n            map.removeLayer(userMarker);\n          }, 3000);\n        });\n\n        // Store map instance\n        mapInstanceRef.current = map;\n        \n        console.log('Leaflet map initialized successfully');\n      } catch (error) {\n        console.error('Failed to initialize Leaflet map:', error);\n        // Fallback to placeholder if Leaflet fails\n        createPlaceholderMap(mapElement, mapConfig);\n      }\n    }\n  };\n\n  const createPlaceholderMap = (mapElement, mapConfig) => {\n    // Fallback placeholder map if Leaflet fails\n    mapElement.innerHTML = `\n      <div class=\"map-placeholder\" style=\"\n        width: 100%; \n        height: 100%; \n        background: linear-gradient(45deg, #e8f5e8 25%, #d4edda 25%, #d4edda 50%, #e8f5e8 50%, #e8f5e8 75%, #d4edda 75%, #d4edda);\n        background-size: 40px 40px;\n        position: relative;\n        cursor: crosshair;\n        border-radius: 8px;\n        border: 2px solid #333;\n      \">\n        <div style=\"\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          text-align: center;\n          color: #333;\n          font-weight: bold;\n        \">\n          <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">üó∫Ô∏è</div>\n          <div>Map loading failed - using placeholder</div>\n          <div style=\"font-size: 0.8rem; margin-top: 0.5rem;\">\n            Center: ${mapConfig.center.lat.toFixed(4)}, ${mapConfig.center.lng.toFixed(4)}\n          </div>\n        </div>\n      </div>\n    `;\n  };\n\n  const checkAnswer = (answerData) => {\n    if (!question) {\n      console.error('Cannot check answer: question not loaded');\n      return;\n    }\n    \n    fetch(`${API_URL}/api/quiz/check-answer`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        questionId: question.questionId,\n        answer: answerData,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log('Answer check result:', data);\n        setResult(data);\n        if (data.result === 'correct') {\n          setScore(prevScore => prevScore + 1);\n        }\n      })\n      .catch((err) => console.error('Failed to check answer:', err));\n  };\n\n  const resetQuiz = () => {\n    setSelectedAnswers({});\n    setResult(null);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading quiz...</div>;\n  }\n\n  if (!question) {\n    return <div>Question not found</div>;\n  }\n\n  const renderQuestionContent = () => {\n    switch (question.questionType) {\n      case 'multiple-choice':\n        return (\n          <div className=\"options-area\">\n            {question.options.map((option) => (\n              <button\n                key={option.optionId}\n                onClick={() => handleMultipleChoice(option.optionId)}\n                className={`option-button ${getButtonClassName(option.optionId)}`}\n                disabled={!!selectedAnswers[questionId]}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        );\n\n      case 'checkboxes':\n        return (\n          <div className=\"checkboxes-area\">\n            {question.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswers[questionId] || []).includes(option.optionId)}\n                  onChange={() => handleCheckboxes(option.optionId)}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n            <button \n              onClick={handleCheckboxesSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length === 0}\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'reorder':\n        return (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswers[questionId]?.map((itemId, index) => {\n                  const item = question.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {question.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswers[questionId] || []).includes(item.itemId) ? 'selected' : ''}`}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            <button \n              onClick={handleReorderSubmit}\n              className=\"submit-button\"\n              disabled={!selectedAnswers[questionId] || selectedAnswers[questionId].length !== question.items.length}\n            >\n              Submit Order\n            </button>\n          </div>\n        );\n\n      case 'range':\n        return (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={question.minValue}\n                max={question.maxValue}\n                value={selectedAnswers[questionId] || question.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswers[questionId] || question.minValue}\n              </div>\n            </div>\n            <button \n              onClick={handleRangeSubmit}\n              className=\"submit-button\"\n            >\n              Submit\n            </button>\n          </div>\n        );\n\n      case 'pinpoint':\n        return (\n          <div className=\"pinpoint-area\">\n            <div className=\"pinpoint-instructions\">\n              <p>{question.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={question.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n              />\n              {selectedAnswers[questionId] && (\n                <div \n                  className=\"pinpoint-marker\"\n                  style={{\n                    left: `${selectedAnswers[questionId].x * 100}%`,\n                    top: `${selectedAnswers[questionId].y * 100}%`\n                  }}\n                >\n                  üéØ\n                </div>\n              )}\n            </div>\n            <div className=\"pinpoint-feedback\">\n              <p>Click anywhere on the image above to mark your answer</p>\n            </div>\n          </div>\n        );\n\n      case 'real-world-map':\n        if (loading || !question.mapConfig) {\n          return (\n            <div className=\"real-world-map-area\">\n              <div className=\"loading\">Loading map...</div>\n            </div>\n          );\n        }\n        \n        return (\n          <div className=\"real-world-map-area\">\n            <div className=\"map-instructions\">\n              <p>Click on the map to mark your answer. Use the map controls to zoom and pan.</p>\n              <p style={{ fontSize: '0.9rem', color: '#666', marginTop: '0.5rem' }}>\n                Loading real geographical map from OpenStreetMap...\n              </p>\n            </div>\n            <div className=\"map-container\">\n              <div \n                id={`map-${questionId}`} \n                className={`real-map ${loading ? 'loading' : ''}`}\n                style={{ height: '400px', width: '100%' }}\n              >\n                {loading && (\n                  <div className=\"map-loading-overlay\">\n                    <div className=\"map-loading-spinner\">üó∫Ô∏è</div>\n                    <div>Loading real map...</div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"map-landmarks\">\n              <h4>Landmarks on this map:</h4>\n              <div className=\"landmarks-list\">\n                {question.mapConfig.landmarks.map((landmark, index) => (\n                  <div key={index} className=\"landmark-item\">\n                    <span className=\"landmark-icon\">{landmark.icon}</span>\n                    <span className=\"landmark-name\">{landmark.name}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"map-feedback\">\n              {selectedAnswers[questionId] ? (\n                <p>You clicked at: {selectedAnswers[questionId].lat.toFixed(4)}, {selectedAnswers[questionId].lng.toFixed(4)}</p>\n              ) : (\n                <p>Click anywhere on the map above to mark your answer</p>\n              )}\n            </div>\n          </div>\n        );\n\n      case 'type-answer':\n        return (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n              />\n              <button type=\"submit\" className=\"submit-button\">\n                Submit\n              </button>\n            </form>\n          </div>\n        );\n\n      default:\n        return <div>Unsupported question type</div>;\n    }\n  };\n\n  const getButtonClassName = (optionId) => {\n    if (!selectedAnswers[questionId]) {\n      return '';\n    }\n    \n    if (result && result.correctOptionId === optionId) {\n      return 'correct';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'incorrect') {\n      return 'incorrect';\n    }\n    \n    if (selectedAnswers[questionId] === optionId && result && result.result === 'correct') {\n      return 'correct';\n    }\n    \n    return 'disabled';\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-button\">‚Üê Back</button>\n        <h1>Quiz</h1>\n        <p className=\"score\">Score: {score}</p>\n      </div>\n\n      <div className=\"question-area\">\n        {question.imageId && (\n          <img \n            src={question.imageId} \n            alt=\"Quiz context\" \n            className=\"quiz-image\" \n            onError={(e) => {\n              console.error('Failed to load image:', question.imageId);\n              e.target.style.display = 'none';\n            }}\n          />\n        )}\n        <h2>{question.questionText}</h2>\n      </div>\n\n      {renderQuestionContent()}\n      \n      {result && (\n        <div className={`result-message ${result.result}`}>\n          {result.result === 'correct' ? 'Correct! Well done!' : 'Not quite!'}\n          {result.result === 'incorrect' && (\n            <div className=\"feedback-details\">\n              {result.correctOptionId && <p>Correct answer: {question.options?.find(opt => opt.optionId === result.correctOptionId)?.text}</p>}\n              {result.correctOptionIds && <p>Correct answers: {result.correctOptionIds.map(id => question.options?.find(opt => opt.optionId === id)?.text).join(', ')}</p>}\n              {result.correctOrder && <p>Correct order: {result.correctOrder.join(' ‚Üí ')}</p>}\n              {result.correctAnswer && <p>Correct answer: {result.correctAnswer}</p>}\n              {result.correctAnswers && <p>Possible answers: {result.correctAnswers.join(', ')}</p>}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {result && (\n        <button onClick={resetQuiz} className=\"reset-button\">\n          Try Again\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default AdvancedQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}