{"ast":null,"code":"var _jsxFileName = \"/Users/raghavpant/\\uD83D\\uDCBB/quiz/quiz-frontend/src/CarLogoQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './CarLogoQuiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://quiz-wfun.onrender.com\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    document.body.appendChild(confetti);\n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\nfunction CarLogoQuiz({\n  onBack\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n  const loadQuestions = useCallback(async () => {\n    const carQuestionIds = ['car1', 'car2', 'car3', 'car4', 'car5', 'car6', 'car7', 'car8', 'car9', 'car10'];\n    try {\n      console.log('Loading car questions...');\n      const questionPromises = carQuestionIds.map(id => fetch(`${API_URL}/api/quiz/${id}`).then(res => {\n        console.log(`Response for ${id}:`, res.status);\n        if (!res.ok) {\n          throw new Error(`Failed to load question ${id}: ${res.status}`);\n        }\n        return res.json();\n      }).then(data => {\n        console.log(`Question ${id} data:`, data);\n        return data;\n      }));\n      const loadedQuestions = await Promise.all(questionPromises);\n      console.log('All loaded questions:', loadedQuestions);\n      console.log('Questions array length:', loadedQuestions.length);\n      console.log('Setting loading to false...');\n      setQuestions(loadedQuestions);\n      setLoading(false);\n      console.log('Loading state should now be false');\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, [loadQuestions]);\n  const handleAnswerSelect = optionId => {\n    if (isAnswered) return;\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n  const handleTypeAnswer = event => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({\n        userAnswer: input.trim()\n      });\n    }\n  };\n  const handleReorder = itemId => {\n    if (isAnswered) return;\n    const current = selectedAnswer || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswer(current.filter(id => id !== itemId));\n    } else {\n      setSelectedAnswer([...current, itemId]);\n    }\n  };\n  const handleReorderSubmit = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedAnswer && selectedAnswer.length === currentQuestion.items.length) {\n      submitAnswer({\n        userOrder: selectedAnswer\n      });\n    }\n  };\n  const handleRange = value => {\n    if (isAnswered) return;\n    setSelectedAnswer(value);\n  };\n  const handleRangeSubmit = () => {\n    if (selectedAnswer !== undefined && selectedAnswer !== null) {\n      submitAnswer({\n        userValue: selectedAnswer\n      });\n    }\n  };\n  const handleLocation = event => {\n    if (isAnswered) return;\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswer({\n      x,\n      y\n    });\n    submitAnswer({\n      userLocation: {\n        x,\n        y\n      }\n    });\n  };\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({\n        userAnswerId: selectedAnswer\n      });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({\n        userSelectedIds: selectedAnswer\n      });\n    }\n  };\n  const submitAnswer = async answerData => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n      const result = await response.json();\n      if (result.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n        setFeedback({\n          type: 'correct',\n          message: 'Correct!'\n        });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({\n          type: 'incorrect',\n          message: `Incorrect! The correct answer is: ${result.correctAnswer}`\n        });\n      }\n      setTimeout(() => {\n        setCurrentQuestionIndex(prevIndex => {\n          if (prevIndex < questions.length - 1) {\n            setSelectedAnswer(null);\n            setIsAnswered(false);\n            setFeedback(null);\n            return prevIndex + 1;\n          } else {\n            setShowResult(true);\n            return prevIndex;\n          }\n        });\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"Loading car logo quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"No questions available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 12\n    }, this);\n  }\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-result\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDE97 Car Logo Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total\",\n            children: [\"/ \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"score-message\",\n          children: score >= 8 ? \"Excellent! You're a car logo expert!\" : score >= 6 ? \"Good job! You know your car brands well.\" : score >= 4 ? \"Not bad! Keep learning about car logos.\" : \"Keep practicing! There's room for improvement.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetQuiz,\n            className: \"retry-button\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onBack,\n            className: \"back-button\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-quiz-loading\",\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-logo-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-btn\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [currentQuestion.imageId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentQuestion.imageId,\n          alt: \"Car logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), currentQuestion.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${selectedAnswer === option.optionId ? 'selected' : ''} ${isAnswered ? 'disabled' : ''}`,\n          onClick: () => handleAnswerSelect(option.optionId),\n          disabled: isAnswered,\n          children: option.text\n        }, option.optionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'checkboxes' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxes-area\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (selectedAnswer || []).includes(option.optionId),\n            onChange: () => handleAnswerSelect(option.optionId),\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, option.optionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'type-answer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-answer-area\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTypeAnswer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answer\",\n            placeholder: \"Type your answer here...\",\n            className: \"answer-input\",\n            autoComplete: \"off\",\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'reorder' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reorder-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click items in the order you want them:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-order\",\n            children: selectedAnswer === null || selectedAnswer === void 0 ? void 0 : selectedAnswer.map((itemId, index) => {\n              const item = currentQuestion.items.find(i => i.itemId === itemId);\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"order-item\",\n                children: [index + 1, \". \", item === null || item === void 0 ? void 0 : item.text]\n              }, itemId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reorder-items\",\n          children: currentQuestion.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReorder(item.itemId),\n            className: `reorder-item ${(selectedAnswer || []).includes(item.itemId) ? 'selected' : ''}`,\n            disabled: isAnswered,\n            children: item.text\n          }, item.itemId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReorderSubmit,\n          className: \"submit-button\",\n          disabled: !selectedAnswer || selectedAnswer.length !== currentQuestion.items.length,\n          children: \"Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'range' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: currentQuestion.minValue,\n            max: currentQuestion.maxValue,\n            value: selectedAnswer || currentQuestion.minValue,\n            onChange: e => handleRange(parseInt(e.target.value)),\n            className: \"range-input\",\n            disabled: isAnswered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-value\",\n            children: [\"Selected: \", selectedAnswer || currentQuestion.minValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRangeSubmit,\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), currentQuestion.questionType === 'pinpoint' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinpoint-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-instructions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentQuestion.pinpointInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentQuestion.imageId,\n            alt: \"Quiz context\",\n            className: \"quiz-image clickable\",\n            onClick: handleLocation,\n            style: {\n              cursor: isAnswered ? 'default' : 'crosshair'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), selectedAnswer && selectedAnswer.x !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pinpoint-marker\",\n            style: {\n              left: `${selectedAnswer.x * 100}%`,\n              top: `${selectedAnswer.y * 100}%`\n            },\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pinpoint-feedback\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click anywhere on the image above to mark your answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feedback ${feedback.type}`,\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), (currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmitAnswer,\n        disabled: !selectedAnswer || currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0 || isAnswered,\n        children: isAnswered ? 'Next Question...' : 'Submit Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(CarLogoQuiz, \"bEQx+ogR2wFYPkymmukPdrgpO3M=\");\n_c = CarLogoQuiz;\nexport default CarLogoQuiz;\nvar _c;\n$RefreshReg$(_c, \"CarLogoQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","API_URL","createConfetti","colors","confettiCount","i","confetti","document","createElement","style","position","left","Math","random","top","width","height","backgroundColor","floor","length","borderRadius","pointerEvents","zIndex","animation","body","appendChild","setTimeout","remove","addConfettiStyles","getElementById","id","textContent","head","CarLogoQuiz","onBack","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","isAnswered","setIsAnswered","loading","setLoading","feedback","setFeedback","loadQuestions","carQuestionIds","console","log","questionPromises","map","fetch","then","res","status","ok","Error","json","data","loadedQuestions","Promise","all","error","handleAnswerSelect","optionId","currentQuestion","questionType","current","newSelection","includes","filter","handleTypeAnswer","event","preventDefault","input","target","answer","value","trim","submitAnswer","userAnswer","handleReorder","itemId","handleReorderSubmit","items","userOrder","handleRange","handleRangeSubmit","undefined","userValue","handleLocation","rect","getBoundingClientRect","x","clientX","y","clientY","userLocation","handleSubmitAnswer","userAnswerId","userSelectedIds","answerData","response","method","headers","JSON","stringify","questionId","result","prevScore","type","message","correctAnswer","prevIndex","resetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","imageId","src","alt","questionText","options","option","disabled","text","checked","onChange","onSubmit","name","placeholder","autoComplete","index","item","find","min","minValue","max","maxValue","e","parseInt","pinpointInstructions","cursor","_c","$RefreshReg$"],"sources":["/Users/raghavpant/💻/quiz/quiz-frontend/src/CarLogoQuiz.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './CarLogoQuiz.css';\n\nconst API_URL = \"https://quiz-wfun.onrender.com\";\n\n// Simple confetti animation function\nconst createConfetti = () => {\n  const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];\n  const confettiCount = 50;\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const confetti = document.createElement('div');\n    confetti.style.position = 'fixed';\n    confetti.style.left = Math.random() * 100 + 'vw';\n    confetti.style.top = '-10px';\n    confetti.style.width = '10px';\n    confetti.style.height = '10px';\n    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n    confetti.style.borderRadius = '50%';\n    confetti.style.pointerEvents = 'none';\n    confetti.style.zIndex = '9999';\n    confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;\n    \n    document.body.appendChild(confetti);\n    \n    setTimeout(() => {\n      confetti.remove();\n    }, 4000);\n  }\n};\n\n// Add CSS animation for confetti\nconst addConfettiStyles = () => {\n  if (!document.getElementById('confetti-styles')) {\n    const style = document.createElement('style');\n    style.id = 'confetti-styles';\n    style.textContent = `\n      @keyframes confetti-fall {\n        0% {\n          transform: translateY(-10px) rotate(0deg);\n          opacity: 1;\n        }\n        100% {\n          transform: translateY(100vh) rotate(360deg);\n          opacity: 0;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n};\n\nfunction CarLogoQuiz({ onBack }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [feedback, setFeedback] = useState(null);\n\n  const loadQuestions = useCallback(async () => {\n    const carQuestionIds = ['car1', 'car2', 'car3', 'car4', 'car5', 'car6', 'car7', 'car8', 'car9', 'car10'];\n    \n    try {\n      console.log('Loading car questions...');\n      const questionPromises = carQuestionIds.map(id => \n        fetch(`${API_URL}/api/quiz/${id}`)\n          .then(res => {\n            console.log(`Response for ${id}:`, res.status);\n            if (!res.ok) {\n              throw new Error(`Failed to load question ${id}: ${res.status}`);\n            }\n            return res.json();\n          })\n          .then(data => {\n            console.log(`Question ${id} data:`, data);\n            return data;\n          })\n      );\n      const loadedQuestions = await Promise.all(questionPromises);\n      console.log('All loaded questions:', loadedQuestions);\n      console.log('Questions array length:', loadedQuestions.length);\n      console.log('Setting loading to false...');\n      setQuestions(loadedQuestions);\n      setLoading(false);\n      console.log('Loading state should now be false');\n    } catch (error) {\n      console.error('Failed to load questions:', error);\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    addConfettiStyles();\n    loadQuestions();\n  }, [loadQuestions]);\n\n  const handleAnswerSelect = (optionId) => {\n    if (isAnswered) return;\n    \n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.questionType === 'checkboxes') {\n      const current = selectedAnswer || [];\n      let newSelection;\n      \n      if (current.includes(optionId)) {\n        newSelection = current.filter(id => id !== optionId);\n      } else {\n        newSelection = [...current, optionId];\n      }\n      \n      setSelectedAnswer(newSelection);\n    } else {\n      setSelectedAnswer(optionId);\n    }\n  };\n\n  const handleTypeAnswer = (event) => {\n    event.preventDefault();\n    const input = event.target.answer.value;\n    if (input.trim()) {\n      setSelectedAnswer(input.trim());\n      submitAnswer({ userAnswer: input.trim() });\n    }\n  };\n\n  const handleReorder = (itemId) => {\n    if (isAnswered) return;\n    const current = selectedAnswer || [];\n    if (current.includes(itemId)) {\n      setSelectedAnswer(current.filter(id => id !== itemId));\n    } else {\n      setSelectedAnswer([...current, itemId]);\n    }\n  };\n\n  const handleReorderSubmit = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedAnswer && selectedAnswer.length === currentQuestion.items.length) {\n      submitAnswer({ userOrder: selectedAnswer });\n    }\n  };\n\n  const handleRange = (value) => {\n    if (isAnswered) return;\n    setSelectedAnswer(value);\n  };\n\n  const handleRangeSubmit = () => {\n    if (selectedAnswer !== undefined && selectedAnswer !== null) {\n      submitAnswer({ userValue: selectedAnswer });\n    }\n  };\n\n  const handleLocation = (event) => {\n    if (isAnswered) return;\n    const rect = event.target.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    setSelectedAnswer({ x, y });\n    submitAnswer({ userLocation: { x, y } });\n  };\n\n  const handleSubmitAnswer = async () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    \n    if (currentQuestion.questionType === 'multiple-choice') {\n      if (!selectedAnswer || isAnswered) return;\n      submitAnswer({ userAnswerId: selectedAnswer });\n    } else if (currentQuestion.questionType === 'checkboxes') {\n      if (!selectedAnswer || selectedAnswer.length === 0 || isAnswered) return;\n      submitAnswer({ userSelectedIds: selectedAnswer });\n    }\n  };\n\n  const submitAnswer = async (answerData) => {\n    if (isAnswered) return;\n\n    setIsAnswered(true);\n    const currentQuestion = questions[currentQuestionIndex];\n\n    try {\n      const response = await fetch(`${API_URL}/api/quiz/check-answer`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          questionId: currentQuestion.questionId,\n          answer: answerData\n        })\n      });\n\n      const result = await response.json();\n      \n      if (result.result === 'correct') {\n        setScore(prevScore => prevScore + 1);\n        setFeedback({ type: 'correct', message: 'Correct!' });\n        // Trigger confetti animation for correct answers\n        createConfetti();\n      } else {\n        setFeedback({ \n          type: 'incorrect', \n          message: `Incorrect! The correct answer is: ${result.correctAnswer}` \n        });\n      }\n\n      setTimeout(() => {\n        setCurrentQuestionIndex(prevIndex => {\n          if (prevIndex < questions.length - 1) {\n            setSelectedAnswer(null);\n            setIsAnswered(false);\n            setFeedback(null);\n            return prevIndex + 1;\n          } else {\n            setShowResult(true);\n            return prevIndex;\n          }\n        });\n      }, 1500);\n    } catch (error) {\n      console.error('Failed to submit answer:', error);\n    }\n  };\n\n  const resetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setScore(0);\n    setShowResult(false);\n    setIsAnswered(false);\n    setFeedback(null);\n  };\n\n  if (loading) {\n    return <div className=\"car-quiz-loading\">Loading car logo quiz...</div>;\n  }\n\n  if (questions.length === 0) {\n    return <div className=\"car-quiz-loading\">No questions available. Please try again later.</div>;\n  }\n\n  if (showResult) {\n    return (\n      <div className=\"car-quiz-result\">\n        <div className=\"result-content\">\n          <h1>🚗 Car Logo Quiz Complete!</h1>\n          <div className=\"score-display\">\n            <span className=\"score\">{score}</span>\n            <span className=\"total\">/ {questions.length}</span>\n          </div>\n          <p className=\"score-message\">\n            {score >= 8 ? \"Excellent! You're a car logo expert!\" :\n             score >= 6 ? \"Good job! You know your car brands well.\" :\n             score >= 4 ? \"Not bad! Keep learning about car logos.\" :\n             \"Keep practicing! There's room for improvement.\"}\n          </p>\n          <div className=\"result-actions\">\n            <button onClick={resetQuiz} className=\"retry-button\">Try Again</button>\n            <button onClick={onBack} className=\"back-button\">Back to Home</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  if (!currentQuestion) {\n    return <div className=\"car-quiz-loading\">Loading question...</div>;\n  }\n\n  return (\n    <div className=\"car-logo-quiz\">\n      <div className=\"quiz-header\">\n        <button onClick={onBack} className=\"back-btn\">← Back</button>\n        <div className=\"progress\">\n          <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"score-display\">Score: {score}</div>\n      </div>\n\n      <div className=\"question-container\">\n        {currentQuestion.imageId && (\n          <div className=\"question-image\">\n            <img src={currentQuestion.imageId} alt=\"Car logo\" />\n          </div>\n        )}\n        \n        <h2 className=\"question-text\">{currentQuestion.questionText}</h2>\n        \n        {currentQuestion.questionType === 'multiple-choice' && (\n          <div className=\"options-grid\">\n            {currentQuestion.options.map((option) => (\n              <button\n                key={option.optionId}\n                className={`option-button ${\n                  selectedAnswer === option.optionId ? 'selected' : ''\n                } ${isAnswered ? 'disabled' : ''}`}\n                onClick={() => handleAnswerSelect(option.optionId)}\n                disabled={isAnswered}\n              >\n                {option.text}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'checkboxes' && (\n          <div className=\"checkboxes-area\">\n            {currentQuestion.options.map((option) => (\n              <label key={option.optionId} className=\"checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  checked={(selectedAnswer || []).includes(option.optionId)}\n                  onChange={() => handleAnswerSelect(option.optionId)}\n                  disabled={isAnswered}\n                />\n                <span>{option.text}</span>\n              </label>\n            ))}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'type-answer' && (\n          <div className=\"type-answer-area\">\n            <form onSubmit={handleTypeAnswer}>\n              <input\n                type=\"text\"\n                name=\"answer\"\n                placeholder=\"Type your answer here...\"\n                className=\"answer-input\"\n                autoComplete=\"off\"\n                disabled={isAnswered}\n              />\n              {!isAnswered && (\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit Answer\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'reorder' && (\n          <div className=\"reorder-area\">\n            <div className=\"reorder-instructions\">\n              <p>Click items in the order you want them:</p>\n              <div className=\"selected-order\">\n                {selectedAnswer?.map((itemId, index) => {\n                  const item = currentQuestion.items.find(i => i.itemId === itemId);\n                  return (\n                    <span key={itemId} className=\"order-item\">\n                      {index + 1}. {item?.text}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"reorder-items\">\n              {currentQuestion.items.map((item) => (\n                <button\n                  key={item.itemId}\n                  onClick={() => handleReorder(item.itemId)}\n                  className={`reorder-item ${(selectedAnswer || []).includes(item.itemId) ? 'selected' : ''}`}\n                  disabled={isAnswered}\n                >\n                  {item.text}\n                </button>\n              ))}\n            </div>\n            {!isAnswered && (\n              <button \n                onClick={handleReorderSubmit}\n                className=\"submit-button\"\n                disabled={!selectedAnswer || selectedAnswer.length !== currentQuestion.items.length}\n              >\n                Submit Order\n              </button>\n            )}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'range' && (\n          <div className=\"range-area\">\n            <div className=\"range-slider\">\n              <input\n                type=\"range\"\n                min={currentQuestion.minValue}\n                max={currentQuestion.maxValue}\n                value={selectedAnswer || currentQuestion.minValue}\n                onChange={(e) => handleRange(parseInt(e.target.value))}\n                className=\"range-input\"\n                disabled={isAnswered}\n              />\n              <div className=\"range-value\">\n                Selected: {selectedAnswer || currentQuestion.minValue}\n              </div>\n            </div>\n            {!isAnswered && (\n              <button \n                onClick={handleRangeSubmit}\n                className=\"submit-button\"\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        )}\n\n        {currentQuestion.questionType === 'pinpoint' && (\n          <div className=\"pinpoint-area\">\n            <div className=\"pinpoint-instructions\">\n              <p>{currentQuestion.pinpointInstructions}</p>\n            </div>\n            <div className=\"image-container\">\n              <img \n                src={currentQuestion.imageId} \n                alt=\"Quiz context\" \n                className=\"quiz-image clickable\" \n                onClick={handleLocation}\n                style={{ cursor: isAnswered ? 'default' : 'crosshair' }}\n              />\n              {selectedAnswer && selectedAnswer.x !== undefined && (\n                <div \n                  className=\"pinpoint-marker\"\n                  style={{\n                    left: `${selectedAnswer.x * 100}%`,\n                    top: `${selectedAnswer.y * 100}%`\n                  }}\n                >\n                  🎯\n                </div>\n              )}\n            </div>\n            <div className=\"pinpoint-feedback\">\n              <p>Click anywhere on the image above to mark your answer</p>\n            </div>\n          </div>\n        )}\n\n        {feedback && (\n          <div className={`feedback ${feedback.type}`}>\n            {feedback.message}\n          </div>\n        )}\n\n        {(currentQuestion.questionType === 'multiple-choice' || currentQuestion.questionType === 'checkboxes') && (\n          <button\n            className=\"submit-button\"\n            onClick={handleSubmitAnswer}\n            disabled={\n              !selectedAnswer || \n              (currentQuestion.questionType === 'checkboxes' && selectedAnswer.length === 0) || \n              isAnswered\n            }\n          >\n            {isAnswered ? 'Next Question...' : 'Submit Answer'}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CarLogoQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}